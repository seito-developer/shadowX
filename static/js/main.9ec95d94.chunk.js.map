{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","inputRange","useRef","useState","ref","url","width","height","loop","played","playing","state","setState","min","max","AmountSlider","createTheme","overrides","MuiSlider","root","thumb","track","borderRadius","rail","handleCommitted","event","value","Array","isArray","val","count","current","seekTo","parseFloat","className","onProgress","progress","onReady","ThemeProvider","theme","Slider","onChange","e","target","onChangeCommitted","aria-labelledby","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA4MeA,MAvKf,WAEE,IAAMC,EAAaC,iBAAY,IAFlB,EAGeC,mBAAgB,CAC1CC,IAAKH,EACLI,IAPc,2CAQdC,MAAO,OACPC,OAAQ,OACRC,MAAM,EACNC,OAAQ,CACNA,OAAQ,GAEVC,SAAS,IAZE,mBAGLC,EAHK,KAGEC,EAHF,OAgBiBT,mBAAsB,CAClDU,IAAK,EACLC,IAAK,IAlBM,mBA8CPC,GA9CO,UA8CQC,YAAY,CAC/BC,UAAW,CACTC,UAAW,CACTC,KAAM,CACJZ,OAAQ,IAEVa,MAAO,CACLb,OAAQ,GACRD,MAAO,IAETe,MAAO,CACLd,OAAQ,GACRe,aAAc,IAEhBC,KAAM,CACJhB,OAAQ,GACRe,aAAc,SAMhBE,EAAkB,SAACC,EAAeC,GACtC,IAAGC,MAAMC,QAAQF,GAAjB,CACA,IAlC4BG,EAkCtBC,EAAgB,IAARJ,EACdd,EAAS,2BACJD,GADG,IAENF,OAAQ,CACNA,OAAQqB,MAtCgBD,EAyCPC,EAxCpB7B,EAAW8B,QAAQC,OAAOC,WAAWJ,MAkFxC,OACE,qBAAKK,UAAU,MAAf,SAEE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,yBACAA,UAAU,gBACNvB,GAFJ,IAGAwB,WAvFe,SAACC,GACtBxB,EAAS,2BACJD,GADG,IAENF,OAAQ2B,MAqFJC,QAxCY,kBA4Cd,cAACC,EAAA,EAAD,CAAeC,MAAOxB,EAAtB,SACE,cAACyB,EAAA,EAAD,CACEd,MAA6B,IAAtBf,EAAMF,OAAOA,OACpBgC,SA1Ge,SAACC,GACxB9B,EAAS,2BACJD,GADG,IAENF,OAAQwB,WAAWS,EAAEC,OAAOjB,WAwGtBkB,kBAAmB,SAACnB,EAAOC,GAAR,OAAkBF,EAAgBC,EAAOC,IAG1DmB,kBAAgB,wBAKtB,qBAAKX,UAAU,4BAAf,SACE,wBACEA,UAAU,4EACVY,QAAS,WA7HbnC,EAAMD,QAGRE,EAAS,2BAAKD,GAAN,IAAaD,SAAS,KAF9BE,EAAS,2BAAKD,GAAN,IAAaD,SAAS,MA0H1B,SAhEFC,EAAMD,QAGD,OAFA,WAsEL,qBAAKwB,UAAU,oCC/KRa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ec95d94.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport ReactPlayer from 'react-player'\n// import Duration from './Duration'\n// import Player from '@vimeo/player'\n// '@types/vimeo__player'\n// const player = new Player(ReactPlayer);\nimport Slider from '@material-ui/core/Slider';\nimport { createTheme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\ninterface Props {\n  ref: any\n  url: string\n  width: string\n  height: string\n  // pip: boolean\n  playing: boolean\n  // controls: boolean\n  // light: boolean\n  // volume: number\n  // muted: boolean\n  played: any\n  // loaded: number\n  // duration: number\n  // playbackRate: number\n  loop: boolean\n  // seeking: boolean\n}\n\ninterface RepearProps {\n  min: number\n  max: number\n}\n\nconst VIDEO_URL = 'https://player.vimeo.com/video/575873877'\n\nfunction App() {\n\n  const inputRange = useRef<any>('');\n  const [ state, setState ] = useState<Props>({\n    ref: inputRange,\n    url: VIDEO_URL,\n    width: '100%',\n    height: '100%',\n    loop: true,\n    played: {\n      played: 0\n    },\n    playing: false\n    // seeking: false\n  })\n\n  const [ repeat, setRepeat ] = useState<RepearProps>({\n    min: 0,\n    max: 1\n  })\n\n  const handlePlayAndPause = () => {\n    if(!state.playing){\n      setState({ ...state, playing: true })\n    } else {\n      setState({ ...state, playing: false })\n    }\n  }\n\n  const handleSeekChange = (e:any) => {\n    setState({ \n      ...state,\n      played: parseFloat(e.target.value) \n     })\n  }\n\n  const handleSeekMouseSlide = (val:any) => {\n     inputRange.current.seekTo(parseFloat(val));\n  }\n\n  const handleProgress = (progress:any) => {\n    setState({\n      ...state,\n      played: progress\n    })\n  }\n  const AmountSlider = createTheme({\n    overrides: {\n      MuiSlider: {\n        root: {\n          height: 20\n        },\n        thumb: {\n          height: 26,\n          width: 26\n        },\n        track: {\n          height: 20,\n          borderRadius: 10\n        },\n        rail: {\n          height: 20,\n          borderRadius: 10\n        }\n      }\n    }\n  });\n\n  const handleCommitted = (event: object, value: number | number[]) => {\n    if(Array.isArray(value)) return\n    const count = value * 0.01\n    setState({\n      ...state,\n      played: {\n        played: count\n      }\n    })\n    handleSeekMouseSlide(count)\n  }\n\n  const swithPlayIcon = () => {\n    if(!state.playing){\n      return 'Play'\n    } else {\n      return 'Stop'\n    }\n  }\n\n  const handleReady = () => {\n\n  }\n\n  const handleRepeat = {\n    min: (event:any) => {\n      const count = event.target.value * 0.01;\n      setRepeat({\n        ...repeat, \n        min: count\n      })\n    }, \n    max: (event:any) => {\n      const count = event.target.value * 0.01;\n      setRepeat({\n        ...repeat, \n        max: count\n      })\n    }\n  }\n\n  // const handleRepeatSet = () => {\n  //   repeat.min\n  //   // repeat.max\n  //   setRepeat({\n  //     ...repeat, \n  //     max: repea\n  //   })\n  //   handleReady()\n  // }\n\n  return (\n    <div className=\"App\">\n        \n      <div className=\"player\">\n        <div className='player-wrapper'>\n          <ReactPlayer \n          className='react-player' \n          {...state}\n          onProgress={handleProgress}\n          onReady={handleReady}\n          />\n        </div>\n\n        <ThemeProvider theme={AmountSlider}>\n          <Slider \n            value={state.played.played * 100}\n            onChange={handleSeekChange}\n            onChangeCommitted={(event, value) => handleCommitted(event, value)}\n              // value={value}\n              // onChange={handleChange}\n              aria-labelledby=\"continuous-slider\"\n              // height=\"50px\"\n            />\n        </ThemeProvider>\n\n        <div className=\"grid justify-items-center\">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n            onClick={() => handlePlayAndPause()}>\n            {swithPlayIcon()}\n          </button>\n        </div>\n\n        <div className=\"grid justify-items-center\">\n          {/* <div>Min: <input type=\"text\" value={repeat.min} onChange={e => handleRepeat.min(e)} /></div>\n          <div>Max: <input type=\"text\" value={repeat.max} onChange={e => handleRepeat.max(e)} /></div>\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n            onClick={() => handleRepeatSet()}>\n            Repeat\n          </button> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n \n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}