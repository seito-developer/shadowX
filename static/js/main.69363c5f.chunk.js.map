{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","timer","inputRange","useRef","useState","ref","url","width","height","loop","played","playing","playbackRate","state","setState","duration","setDuration","start","end","point","setPoint","partialRepeat","setPartialRepeat","delay","setDelay","handleReady","console","log","current","seekTo","AmountSlider","createTheme","overrides","MuiSlider","root","thumb","track","borderRadius","rail","handleCommitted","event","value","Array","isArray","val","count","parseFloat","className","onProgress","progress","playedSeconds","clearTimeout","setTimeout","onReady","onEnded","onStart","getDuration","onPlay","ThemeProvider","theme","Slider","aria-labelledby","onChange","e","target","onChangeCommitted","onClick","Number","toFixed","handleSpeed","join","type","handleStartPoint","max","handleEndPoint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69363c5f.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport './index.css';\nimport ReactPlayer from 'react-player'\n// import Duration from './Duration'\n// import Player from '@vimeo/player'\n// '@types/vimeo__player'\n// const player = new Player(ReactPlayer);\nimport Slider from '@material-ui/core/Slider';\nimport { createTheme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\ninterface Props {\n  ref: any\n  url: string\n  width: string\n  height: string\n  // pip: boolean\n  playing: boolean\n  // controls: boolean\n  // light: boolean\n  // volume: number\n  // muted: boolean\n  played: any\n  // loaded: number\n  // duration: number\n  // playbackRate: number\n  loop: boolean\n  // seeking: boolean\n  playbackRate: number\n}\n\ninterface PointProps {\n  start: number\n  end: number\n}\n\nconst VIDEO_URL = 'https://player.vimeo.com/video/575873877'\n\nfunction App() {\n\n  const inputRange = useRef<any>('');\n  const [ state, setState ] = useState<Props>({\n    ref: inputRange,\n    url: VIDEO_URL,\n    width: '100%',\n    height: '100%',\n    loop: false,\n    played: {\n      played: 0\n    },\n    playing: false,\n    playbackRate: 1\n    // seeking: false\n  })\n  const [ duration, setDuration ] = useState<number>(0)\n  const [ point, setPoint ] = useState<PointProps>({\n    start: 0,\n    end: duration\n  })\n  const [ partialRepeat, setPartialRepeat ] = useState(false)\n  const [ delay, setDelay ] = useState(1)\n\n  const handleReady = () => {\n    console.log(point.start)\n    inputRange.current.seekTo(point.start);\n  }\n\n  const handlePlayAndPause = () => {\n    if(!state.playing){\n      handleReady()\n      setState({ ...state, playing: true })\n    } else {\n      setState({ ...state, playing: false })\n    }\n  }\n  \n  const handleStart = () => {\n    console.log('start!')\n    setDuration(inputRange.current.getDuration())\n    handleReady()\n  }\n\n  const handlePlayStart = () => {\n    console.log('PlayStart!')\n    handleReady()\n  }\n\n  let timer:any\n  const handleEnded = () => {\n    console.log('end!')\n    setState({ ...state, playing: false })\n    handleReady()\n    \n    clearTimeout(timer)\n    timer = setTimeout(\n      () => { \n        setState({ ...state, playing: true })\n      }, 500\n    )\n  }\n  const handleSeekChange = (e:any) => {\n    setState({ \n      ...state,\n      played: parseFloat(e.target.value) \n     })\n  }\n\n  const handleSeekMouseSlide = (val:any) => {\n     inputRange.current.seekTo(parseFloat(val));\n  }\n\n  const forceRepeat = (current:number) => {\n    if(!partialRepeat) return\n    \n    if(current > point.end){\n      console.log('fire!')\n      handleReady()\n      setState({ ...state, playing: false })\n      clearTimeout(timer)\n      timer = setTimeout(\n        () => { \n          setState({ ...state, playing: true })\n        }, 500\n      )\n    }\n  }\n\n  const handleProgress = (progress:any) => {\n    setState({\n      ...state,\n      played: progress\n    })\n    console.log('now: ', progress.playedSeconds)\n    forceRepeat(progress.playedSeconds)\n  }\n  const AmountSlider = createTheme({\n    overrides: {\n      MuiSlider: {\n        root: {\n          height: 10\n        },\n        thumb: {\n          height: 26,\n          width: 26\n        },\n        track: {\n          height: 20,\n          borderRadius: 10\n        },\n        rail: {\n          height: 20,\n          borderRadius: 10\n        }\n      }\n    }\n  });\n\n  const handleCommitted = (event: object, value: number | number[]) => {\n    if(Array.isArray(value)) return\n    const count = value * 0.01\n    setState({\n      ...state,\n      played: {\n        played: count\n      }\n    })\n    handleSeekMouseSlide(count)\n  }\n\n  const swithPlayIcon = () => {\n    if(!state.playing){\n      return 'Play'\n    } else {\n      return 'Stop'\n    }\n  }\n\n  const handleSpeed = () => {\n    const count = delay - 0.1\n    if(0.7 < count){\n      setDelay(Number((count).toFixed(1)))\n    } else {\n      setDelay(1)\n    }\n    setState({ ...state, playbackRate: delay })\n  }\n\n  const handleStartPoint = (e:any) => {\n    setPoint({ ...point, start: e.target.value })\n  }\n  const handleEndPoint = (e:any) => {\n    setPoint({ ...point, end: e.target.value })\n  }\n\n  const handlePartialRepeat = () => {\n    if(!partialRepeat){\n      setPartialRepeat(true)\n    } else {\n      setPartialRepeat(false)\n    }\n  }\n  const switchRepeat = () => {\n    if(partialRepeat){\n      return 'is-active'\n    } else {\n      return ''\n    }\n  }\n\n  return (\n    <div className=\"App\">\n        \n      <div className=\"player\">\n        <div className='player-wrapper'>\n          <ReactPlayer \n          className='react-player' \n          {...state}\n          onProgress={handleProgress} \n          onReady={handleReady}\n          onEnded={() => handleEnded()}\n          onStart={handleStart}\n          onPlay={handlePlayStart}\n          />\n        </div>\n\n        <div className=\"player-ui\">\n          <ThemeProvider theme={AmountSlider}>\n            <div className=\"px-2\">\n              <Slider \n                value={state.played.played * 100}\n                aria-labelledby=\"continuous-slider\"\n                onChange={handleSeekChange}\n                onChangeCommitted={(event, value) => handleCommitted(event, value)}\n                />\n            </div>\n          </ThemeProvider>\n\n          <div className=\"main-buttons\">\n            <button\n              className=\"bg-green-500 border-green-500 hover:bg-green-600 text-white text-lg font-bold py-4 px-10 rounded-full\"\n              onClick={() => handlePlayAndPause()}>\n              {swithPlayIcon()}\n            </button>\n            <button \n              className=\"mx-auto border border-gray-300 rounded-md text-md font-medium py-2 px-2 text-gray-500 dark:border-gray-600 dark:text-gray-400\"\n              onClick={() => handleSpeed()}>\n                SPEED: { state.playbackRate }\n            </button>\n            <div className=\"main-buttons__second\">{duration}/s</div>\n          </div>\n        \n          <div className={[\"repeat\", switchRepeat()].join(' ')}>\n            <div className=\"repeat__button\">\n              <button \n              className=\"mx-auto border border-gray-300 rounded-md text-lg font-medium py-2 px-3 text-gray-500 dark:border-gray-600 dark:text-gray-400\"\n              onClick={() => handlePartialRepeat()}>{ partialRepeat ? 'R:ON' : 'R:OFF'}</button>  \n            </div>\n            \n            <div className=\"repeat__inputs\">\n              <label className=\"repeat__input\">Min: <input type=\"number\" value={point.start} onChange={(e) => handleStartPoint(e)} /></label>\n              <label className=\"repeat__input\">Max: <input type=\"number\" max={duration} value={point.end} onChange={(e) => handleEndPoint(e)} /></label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n \n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}