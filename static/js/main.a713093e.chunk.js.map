{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","inputRange","useRef","useState","ref","url","width","height","loop","played","playing","playbackRate","state","setState","start","end","point","setPoint","handleReady","console","log","current","seekTo","AmountSlider","createTheme","overrides","MuiSlider","root","thumb","track","borderRadius","rail","handleCommitted","event","value","Array","isArray","val","count","parseFloat","handleSpeed","className","onProgress","progress","onReady","ThemeProvider","theme","Slider","onChange","e","target","onChangeCommitted","aria-labelledby","onClick","type","handleStartPoint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAyMeA,MAnKf,WAEE,IAAMC,EAAaC,iBAAY,IAFlB,EAGeC,mBAAgB,CAC1CC,IAAKH,EACLI,IAPc,2CAQdC,MAAO,OACPC,OAAQ,OACRC,MAAM,EACNC,OAAQ,CACNA,OAAQ,GAEVC,SAAS,EACTC,aAAc,IAbH,mBAGLC,EAHK,KAGEC,EAHF,OAgBeV,mBAAqB,CAC/CW,MAAO,EACPC,IAAK,MAlBM,mBAgBLC,EAhBK,KAgBEC,EAhBF,KAqBPC,EAAc,WAClBC,QAAQC,IAAIJ,EAAMF,OAClBb,EAAWoB,QAAQC,OAAON,EAAMF,QA6B5BS,EAAeC,YAAY,CAC/BC,UAAW,CACTC,UAAW,CACTC,KAAM,CACJpB,OAAQ,IAEVqB,MAAO,CACLrB,OAAQ,GACRD,MAAO,IAETuB,MAAO,CACLtB,OAAQ,GACRuB,aAAc,IAEhBC,KAAM,CACJxB,OAAQ,GACRuB,aAAc,QAMhBE,EAAkB,SAACC,EAAeC,GACtC,IAAGC,MAAMC,QAAQF,GAAjB,CACA,IAlC4BG,EAkCtBC,EAAgB,IAARJ,EACdrB,EAAS,2BACJD,GADG,IAENH,OAAQ,CACNA,OAAQ6B,MAtCgBD,EAyCPC,EAxCpBrC,EAAWoB,QAAQC,OAAOiB,WAAWF,MAmDlCG,EAAc,SAACH,GACnBxB,EAAS,2BACJD,GADG,IAEND,aAAc0B,MAYlB,OACE,qBAAKI,UAAU,MAAf,SAEE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,IAAD,yBACAA,UAAU,gBACN7B,GAFJ,IAGA8B,WAvEe,SAACC,GACtB9B,EAAS,2BACJD,GADG,IAENH,OAAQkC,MAqEJC,QAAS1B,OAIX,cAAC2B,EAAA,EAAD,CAAeC,MAAOvB,EAAtB,SACE,cAACwB,EAAA,EAAD,CACEb,MAA6B,IAAtBtB,EAAMH,OAAOA,OACpBuC,SA1Fe,SAACC,GACxBpC,EAAS,2BACJD,GADG,IAENH,OAAQ8B,WAAWU,EAAEC,OAAOhB,WAwFtBiB,kBAAmB,SAAClB,EAAOC,GAAR,OAAkBF,EAAgBC,EAAOC,IAG1DkB,kBAAgB,wBAKtB,qBAAKX,UAAU,4BAAf,SACE,wBACEA,UAAU,4EACVY,QAAS,WA9GbzC,EAAMF,QAIRG,EAAS,2BAAKD,GAAN,IAAaF,SAAS,MAH9BQ,IACAL,EAAS,2BAAKD,GAAN,IAAaF,SAAS,OA0G1B,SAhDFE,EAAMF,QAGD,OAFA,WAsDL,sBAAK+B,UAAU,4BAAf,UACE,wBAAQY,QAAS,kBAAMb,EAAY,KAAnC,kBACA,wBAAQa,QAAS,kBAAMb,EAAY,KAAnC,kBACA,wBAAQa,QAAS,kBAAMb,EAAY,KAAnC,kBACA,wBAAQa,QAAS,kBAAMb,EAAY,IAAnC,mBAGF,qBAAKC,UAAU,4BAAf,SACG7B,EAAMD,eAGT,sBAAK8B,UAAU,4BAAf,UACE,wCAAU,uBAAOa,KAAK,SAASpB,MAAOlB,EAAMF,MAAOkC,SAAU,SAACC,GAAD,OArD5C,SAACA,GACxB9B,QAAQC,IAAI,eAAgBJ,EAAMF,OAClCG,EAAS,2BACJD,GADG,IAENF,MAAOmC,EAAEC,OAAOhB,SAiDwDqB,CAAiBN,SACrF,wCAAU,uBAAOK,KAAK,uBCnLjBE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a713093e.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport ReactPlayer from 'react-player'\n// import Duration from './Duration'\n// import Player from '@vimeo/player'\n// '@types/vimeo__player'\n// const player = new Player(ReactPlayer);\nimport Slider from '@material-ui/core/Slider';\nimport { createTheme, ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\ninterface Props {\n  ref: any\n  url: string\n  width: string\n  height: string\n  // pip: boolean\n  playing: boolean\n  // controls: boolean\n  // light: boolean\n  // volume: number\n  // muted: boolean\n  played: any\n  // loaded: number\n  // duration: number\n  // playbackRate: number\n  loop: boolean\n  // seeking: boolean\n  playbackRate: number\n}\n\ninterface PointProps {\n  start: number\n  end: number\n}\n\nconst VIDEO_URL = 'https://player.vimeo.com/video/575873877'\n\nfunction App() {\n\n  const inputRange = useRef<any>('');\n  const [ state, setState ] = useState<Props>({\n    ref: inputRange,\n    url: VIDEO_URL,\n    width: '100%',\n    height: '100%',\n    loop: true,\n    played: {\n      played: 0\n    },\n    playing: false,\n    playbackRate: 1\n    // seeking: false\n  })\n  const [ point, setPoint ] = useState<PointProps>({\n    start: 0,\n    end: 100\n  })\n\n  const handleReady = () => {\n    console.log(point.start)\n    inputRange.current.seekTo(point.start);\n  }\n\n  const handlePlayAndPause = () => {\n    if(!state.playing){\n      handleReady()\n      setState({ ...state, playing: true })\n    } else {\n      setState({ ...state, playing: false })\n    }\n  }\n\n  const handleSeekChange = (e:any) => {\n    setState({ \n      ...state,\n      played: parseFloat(e.target.value) \n     })\n  }\n\n  const handleSeekMouseSlide = (val:any) => {\n     inputRange.current.seekTo(parseFloat(val));\n  }\n\n  const handleProgress = (progress:any) => {\n    setState({\n      ...state,\n      played: progress\n    })\n  }\n  const AmountSlider = createTheme({\n    overrides: {\n      MuiSlider: {\n        root: {\n          height: 20\n        },\n        thumb: {\n          height: 26,\n          width: 26\n        },\n        track: {\n          height: 20,\n          borderRadius: 10\n        },\n        rail: {\n          height: 20,\n          borderRadius: 10\n        }\n      }\n    }\n  });\n\n  const handleCommitted = (event: object, value: number | number[]) => {\n    if(Array.isArray(value)) return\n    const count = value * 0.01\n    setState({\n      ...state,\n      played: {\n        played: count\n      }\n    })\n    handleSeekMouseSlide(count)\n  }\n\n  const swithPlayIcon = () => {\n    if(!state.playing){\n      return 'Play'\n    } else {\n      return 'Stop'\n    }\n  }\n\n  const handleSpeed = (val:number) => {\n    setState({\n      ...state,\n      playbackRate: val\n    })\n  }\n\n  const handleStartPoint = (e:any) => {\n    console.log('point.start:', point.start)\n    setPoint({\n      ...point,\n      start: e.target.value\n    })\n  }\n\n  return (\n    <div className=\"App\">\n        \n      <div className=\"player\">\n        <div className='player-wrapper'>\n          <ReactPlayer \n          className='react-player' \n          {...state}\n          onProgress={handleProgress} \n          onReady={handleReady}\n          />\n        </div>\n\n        <ThemeProvider theme={AmountSlider}>\n          <Slider \n            value={state.played.played * 100}\n            onChange={handleSeekChange}\n            onChangeCommitted={(event, value) => handleCommitted(event, value)}\n              // value={value}\n              // onChange={handleChange}\n              aria-labelledby=\"continuous-slider\"\n              // height=\"50px\"\n            />\n        </ThemeProvider>\n\n        <div className=\"grid justify-items-center\">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n            onClick={() => handlePlayAndPause()}>\n            {swithPlayIcon()}\n          </button>\n        </div>\n\n        <div className=\"grid justify-items-center\">\n          <button onClick={() => handleSpeed(0.7)}>x0.7</button>\n          <button onClick={() => handleSpeed(0.8)}>x0.8</button>\n          <button onClick={() => handleSpeed(0.9)}>x0.9</button>\n          <button onClick={() => handleSpeed(1)}>x1</button>\n        </div>\n\n        <div className=\"grid justify-items-center\">\n          {state.playbackRate}\n        </div>\n\n        <div className=\"grid justify-items-center\">\n          <div>Min: <input type=\"number\" value={point.start} onChange={(e) => handleStartPoint(e)} /></div>\n          <div>Max: <input type=\"number\" /></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n \n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}