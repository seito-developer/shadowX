{"ast":null,"code":"const {\n  asAngle,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  matchUtilities\n}) {\n  matchUtilities({\n    'skew-x': (modifier, {\n      theme\n    }) => {\n      let value = asAngle(modifier, theme.skew);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('skew-x', modifier)]: {\n          '--tw-skew-x': value\n        }\n      };\n    },\n    'skew-y': (modifier, {\n      theme\n    }) => {\n      let value = asAngle(modifier, theme.skew);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('skew-y', modifier)]: {\n          '--tw-skew-y': value\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/skew.js"],"names":["asAngle","nameClass","require","module","exports","matchUtilities","modifier","theme","value","skew","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAyBC,OAAO,CAAC,gBAAD,CAAtC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAA8B;AAC7CA,EAAAA,cAAc,CAAC;AACb,cAAU,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACjC,UAAIC,KAAK,GAAGR,OAAO,CAACM,QAAD,EAAWC,KAAK,CAACE,IAAjB,CAAnB;;AAEA,UAAID,KAAK,KAAKE,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,QAAD,EAAWK,QAAX,CAAV,GAAiC;AAAE,yBAAeE;AAAjB;AAAnC,OAAP;AACD,KATY;AAUb,cAAU,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACjC,UAAIC,KAAK,GAAGR,OAAO,CAACM,QAAD,EAAWC,KAAK,CAACE,IAAjB,CAAnB;;AAEA,UAAID,KAAK,KAAKE,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,QAAD,EAAWK,QAAX,CAAV,GAAiC;AAAE,yBAAeE;AAAjB;AAAnC,OAAP;AACD;AAlBY,GAAD,CAAd;AAoBD,CArBD","sourcesContent":["const { asAngle, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ matchUtilities }) {\n  matchUtilities({\n    'skew-x': (modifier, { theme }) => {\n      let value = asAngle(modifier, theme.skew)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('skew-x', modifier)]: { '--tw-skew-x': value } }\n    },\n    'skew-y': (modifier, { theme }) => {\n      let value = asAngle(modifier, theme.skew)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('skew-y', modifier)]: { '--tw-skew-y': value } }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}