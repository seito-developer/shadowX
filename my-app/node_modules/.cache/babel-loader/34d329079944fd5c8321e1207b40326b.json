{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\n\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\n\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\n\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\n\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\n\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\n\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\n\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\n\nfunction isKeyframeRule(rule) {\n  return rule.parent && rule.parent.type === 'atrule' && /keyframes$/.test(rule.parent.name);\n}\n\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities: (utilities, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true,\n          respectImportant: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(utilities)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !isKeyframeRule(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n\n          if (options.respectImportant && config.important) {\n            rule.__tailwind = { ...rule.__tailwind,\n              important: config.important\n            };\n          }\n        });\n        pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !isKeyframeRule(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: (name, generator, options = {}) => {\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/lib/util/processPlugins.js"],"names":["Object","defineProperty","exports","value","default","_default","_lodash","_interopRequireDefault","require","_postcss","_node","_isFunction","_escapeClassName","_generateVariantFunction","_parseObjectStyles","_prefixSelector","_wrapWithVariants","_cloneNodes","_transformThemeValue","obj","__esModule","parseStyles","styles","Array","isArray","flatMap","style","wrapWithLayer","rules","layer","atRule","name","params","append","isKeyframeRule","rule","parent","type","test","plugins","config","pluginBaseStyles","pluginComponents","pluginUtilities","pluginVariantGenerators","applyConfiguredPrefix","selector","prefix","getConfigValue","path","defaultValue","get","forEach","plugin","__isOptionsFunction","handler","postcss","theme","pathRoot","subPaths","toPath","corePlugins","includes","variants","e","addUtilities","utilities","options","defaultOptions","respectPrefix","respectImportant","assign","defaults","root","nodes","walkRules","important","__tailwind","push","addComponents","components","addBase","baseStyles","addVariant","generator","base","variantGenerators"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIE,KAAK,GAAGH,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAlC;;AAEA,IAAIG,WAAW,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAxC;;AAEA,IAAII,gBAAgB,GAAGL,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAA7C;;AAEA,IAAIK,wBAAwB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAArD;;AAEA,IAAIM,kBAAkB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAA/C;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,IAAIQ,iBAAiB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAA9C;;AAEA,IAAIS,WAAW,GAAGV,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,IAAIU,oBAAoB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAjD;;AAEA,SAASD,sBAAT,CAAgCY,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEf,IAAAA,OAAO,EAAEe;AAAX,GAArC;AAAwD;;AAE/F,SAASE,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1B,WAAOD,WAAW,CAAC,CAACC,MAAD,CAAD,CAAlB;AACD;;AAED,SAAOhB,OAAO,CAACF,OAAR,CAAgBqB,OAAhB,CAAwBH,MAAxB,EAAgCI,KAAK,IAAIA,KAAK,YAAYhB,KAAK,CAACN,OAAvB,GAAiCsB,KAAjC,GAAyC,CAAC,GAAGZ,kBAAkB,CAACV,OAAvB,EAAgCsB,KAAhC,CAAlF,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,SAAOpB,QAAQ,CAACL,OAAT,CAAiB0B,MAAjB,CAAwB;AAC7BC,IAAAA,IAAI,EAAE,OADuB;AAE7BC,IAAAA,MAAM,EAAEH;AAFqB,GAAxB,EAGJI,MAHI,CAGG,CAAC,GAAGhB,WAAW,CAACb,OAAhB,EAAyBmB,KAAK,CAACC,OAAN,CAAcI,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAxD,CAHH,CAAP;AAID;;AAED,SAASM,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,QAApC,IAAgD,aAAaC,IAAb,CAAkBH,IAAI,CAACC,MAAL,CAAYL,IAA9B,CAAvD;AACD;;AAED,SAAS1B,QAAT,CAAkBkC,OAAlB,EAA2BC,MAA3B,EAAmC;AACjC,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAMC,uBAAuB,GAAG,EAAhC;;AAEA,QAAMC,qBAAqB,GAAGC,QAAQ,IAAI;AACxC,WAAO,CAAC,GAAG/B,eAAe,CAACX,OAApB,EAA6BoC,MAAM,CAACO,MAApC,EAA4CD,QAA5C,CAAP;AACD,GAFD;;AAIA,QAAME,cAAc,GAAG,CAACC,IAAD,EAAOC,YAAP,KAAwBD,IAAI,GAAG3C,OAAO,CAACF,OAAR,CAAgB+C,GAAhB,CAAoBX,MAApB,EAA4BS,IAA5B,EAAkCC,YAAlC,CAAH,GAAqDV,MAAxG;;AAEAD,EAAAA,OAAO,CAACa,OAAR,CAAgBC,MAAM,IAAI;AACxB,QAAIA,MAAM,CAACC,mBAAX,EAAgC;AAC9BD,MAAAA,MAAM,GAAGA,MAAM,EAAf;AACD;;AAED,UAAME,OAAO,GAAG,CAAC,GAAG5C,WAAW,CAACP,OAAhB,EAAyBiD,MAAzB,IAAmCA,MAAnC,GAA4C/C,OAAO,CAACF,OAAR,CAAgB+C,GAAhB,CAAoBE,MAApB,EAA4B,SAA5B,EAAuC,MAAM,CAAE,CAA/C,CAA5D;AACAE,IAAAA,OAAO,CAAC;AACNC,MAAAA,OAAO,EAAE/C,QAAQ,CAACL,OADZ;AAENoC,MAAAA,MAAM,EAAEQ,cAFF;AAGNS,MAAAA,KAAK,EAAE,CAACR,IAAD,EAAOC,YAAP,KAAwB;AAC7B,cAAM,CAACQ,QAAD,EAAW,GAAGC,QAAd,IAA0BrD,OAAO,CAACF,OAAR,CAAgBwD,MAAhB,CAAuBX,IAAvB,CAAhC;;AAEA,cAAM9C,KAAK,GAAG6C,cAAc,CAAC,CAAC,OAAD,EAAUU,QAAV,EAAoB,GAAGC,QAAvB,CAAD,EAAmCT,YAAnC,CAA5B;AACA,eAAO,CAAC,GAAGhC,oBAAoB,CAACd,OAAzB,EAAkCsD,QAAlC,EAA4CvD,KAA5C,CAAP;AACD,OARK;AASN0D,MAAAA,WAAW,EAAEZ,IAAI,IAAI;AACnB,YAAI1B,KAAK,CAACC,OAAN,CAAcgB,MAAM,CAACqB,WAArB,CAAJ,EAAuC;AACrC,iBAAOrB,MAAM,CAACqB,WAAP,CAAmBC,QAAnB,CAA4Bb,IAA5B,CAAP;AACD;;AAED,eAAOD,cAAc,CAAE,eAAcC,IAAK,EAArB,EAAwB,IAAxB,CAArB;AACD,OAfK;AAgBNc,MAAAA,QAAQ,EAAE,CAACd,IAAD,EAAOC,YAAP,KAAwB;AAChC,YAAI3B,KAAK,CAACC,OAAN,CAAcgB,MAAM,CAACuB,QAArB,CAAJ,EAAoC;AAClC,iBAAOvB,MAAM,CAACuB,QAAd;AACD;;AAED,eAAOf,cAAc,CAAE,YAAWC,IAAK,EAAlB,EAAqBC,YAArB,CAArB;AACD,OAtBK;AAuBNc,MAAAA,CAAC,EAAEpD,gBAAgB,CAACR,OAvBd;AAwBN2C,MAAAA,MAAM,EAAEF,qBAxBF;AAyBNoB,MAAAA,YAAY,EAAE,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACpC,cAAMC,cAAc,GAAG;AACrBL,UAAAA,QAAQ,EAAE,EADW;AAErBM,UAAAA,aAAa,EAAE,IAFM;AAGrBC,UAAAA,gBAAgB,EAAE;AAHG,SAAvB;AAKAH,QAAAA,OAAO,GAAG5C,KAAK,CAACC,OAAN,CAAc2C,OAAd,IAAyBnE,MAAM,CAACuE,MAAP,CAAc,EAAd,EAAkBH,cAAlB,EAAkC;AACnEL,UAAAA,QAAQ,EAAEI;AADyD,SAAlC,CAAzB,GAEL7D,OAAO,CAACF,OAAR,CAAgBoE,QAAhB,CAAyBL,OAAzB,EAAkCC,cAAlC,CAFL;;AAIA,cAAM9C,MAAM,GAAGb,QAAQ,CAACL,OAAT,CAAiBqE,IAAjB,CAAsB;AACnCC,UAAAA,KAAK,EAAErD,WAAW,CAAC6C,SAAD;AADiB,SAAtB,CAAf;;AAIA5C,QAAAA,MAAM,CAACqD,SAAP,CAAiBxC,IAAI,IAAI;AACvB,cAAIgC,OAAO,CAACE,aAAR,IAAyB,CAACnC,cAAc,CAACC,IAAD,CAA5C,EAAoD;AAClDA,YAAAA,IAAI,CAACW,QAAL,GAAgBD,qBAAqB,CAACV,IAAI,CAACW,QAAN,CAArC;AACD;;AAED,cAAIqB,OAAO,CAACG,gBAAR,IAA4B9B,MAAM,CAACoC,SAAvC,EAAkD;AAChDzC,YAAAA,IAAI,CAAC0C,UAAL,GAAkB,EAAE,GAAG1C,IAAI,CAAC0C,UAAV;AAChBD,cAAAA,SAAS,EAAEpC,MAAM,CAACoC;AADF,aAAlB;AAGD;AACF,SAVD;AAWAjC,QAAAA,eAAe,CAACmC,IAAhB,CAAqBnD,aAAa,CAAC,CAAC,GAAGX,iBAAiB,CAACZ,OAAtB,EAA+BkB,MAAM,CAACoD,KAAtC,EAA6CP,OAAO,CAACJ,QAArD,CAAD,EAAiE,WAAjE,CAAlC;AACD,OAnDK;AAoDNgB,MAAAA,aAAa,EAAE,CAACC,UAAD,EAAab,OAAb,KAAyB;AACtC,cAAMC,cAAc,GAAG;AACrBL,UAAAA,QAAQ,EAAE,EADW;AAErBM,UAAAA,aAAa,EAAE;AAFM,SAAvB;AAIAF,QAAAA,OAAO,GAAG5C,KAAK,CAACC,OAAN,CAAc2C,OAAd,IAAyBnE,MAAM,CAACuE,MAAP,CAAc,EAAd,EAAkBH,cAAlB,EAAkC;AACnEL,UAAAA,QAAQ,EAAEI;AADyD,SAAlC,CAAzB,GAEL7D,OAAO,CAACF,OAAR,CAAgBoE,QAAhB,CAAyBL,OAAzB,EAAkCC,cAAlC,CAFL;;AAIA,cAAM9C,MAAM,GAAGb,QAAQ,CAACL,OAAT,CAAiBqE,IAAjB,CAAsB;AACnCC,UAAAA,KAAK,EAAErD,WAAW,CAAC2D,UAAD;AADiB,SAAtB,CAAf;;AAIA1D,QAAAA,MAAM,CAACqD,SAAP,CAAiBxC,IAAI,IAAI;AACvB,cAAIgC,OAAO,CAACE,aAAR,IAAyB,CAACnC,cAAc,CAACC,IAAD,CAA5C,EAAoD;AAClDA,YAAAA,IAAI,CAACW,QAAL,GAAgBD,qBAAqB,CAACV,IAAI,CAACW,QAAN,CAArC;AACD;AACF,SAJD;AAKAJ,QAAAA,gBAAgB,CAACoC,IAAjB,CAAsBnD,aAAa,CAAC,CAAC,GAAGX,iBAAiB,CAACZ,OAAtB,EAA+BkB,MAAM,CAACoD,KAAtC,EAA6CP,OAAO,CAACJ,QAArD,CAAD,EAAiE,YAAjE,CAAnC;AACD,OAvEK;AAwENkB,MAAAA,OAAO,EAAEC,UAAU,IAAI;AACrBzC,QAAAA,gBAAgB,CAACqC,IAAjB,CAAsBnD,aAAa,CAACN,WAAW,CAAC6D,UAAD,CAAZ,EAA0B,MAA1B,CAAnC;AACD,OA1EK;AA2ENC,MAAAA,UAAU,EAAE,CAACpD,IAAD,EAAOqD,SAAP,EAAkBjB,OAAO,GAAG,EAA5B,KAAmC;AAC7CvB,QAAAA,uBAAuB,CAACb,IAAD,CAAvB,GAAgC,CAAC,GAAGlB,wBAAwB,CAACT,OAA7B,EAAsCgF,SAAtC,EAAiDjB,OAAjD,CAAhC;AACD;AA7EK,KAAD,CAAP;AA+ED,GArFD;AAsFA,SAAO;AACLkB,IAAAA,IAAI,EAAE5C,gBADD;AAELuC,IAAAA,UAAU,EAAEtC,gBAFP;AAGLwB,IAAAA,SAAS,EAAEvB,eAHN;AAIL2C,IAAAA,iBAAiB,EAAE1C;AAJd,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\n\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\n\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\n\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\n\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\n\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\n\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\n\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\n\nfunction isKeyframeRule(rule) {\n  return rule.parent && rule.parent.type === 'atrule' && /keyframes$/.test(rule.parent.name);\n}\n\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities: (utilities, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true,\n          respectImportant: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(utilities)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !isKeyframeRule(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n\n          if (options.respectImportant && config.important) {\n            rule.__tailwind = { ...rule.__tailwind,\n              important: config.important\n            };\n          }\n        });\n        pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !isKeyframeRule(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: (name, generator, options = {}) => {\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}"]},"metadata":{},"sourceType":"script"}