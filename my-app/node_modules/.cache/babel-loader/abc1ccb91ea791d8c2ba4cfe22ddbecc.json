{"ast":null,"code":"var _jsxFileName = \"/Users/seito/Documents/develop/shadowX/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport ReactPlayer from 'react-player'; // import Duration from './Duration'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIDEO_URL = 'https://player.vimeo.com/video/575873877';\n\nfunction App() {\n  _s();\n\n  const inputRange = useRef('');\n  const [state, setState] = useState({\n    ref: inputRange,\n    url: VIDEO_URL,\n    width: '100%',\n    height: '100%',\n    loop: true,\n    played: 0,\n    seeking: false\n  }); // player.setCurrentTime(0)\n  // inputRange.current.on('play', function() {\n  //   console.log('played the video!');\n  // });\n  // console.log('player:', player)\n\n  const handleSeekMouseDown = e => {\n    setState({ ...state,\n      seeking: true\n    });\n  };\n\n  const handleSeekChange = e => {\n    setState({ ...state,\n      played: parseFloat(e.target.value)\n    });\n  };\n\n  const handleSeekMouseUp = e => {\n    setState({ ...state,\n      seeking: false\n    });\n    inputRange.current.seekTo(parseFloat(e.target.value));\n  };\n\n  const handleProgress = progress => {\n    // We only want to update time slider if we are not currently seeking\n    // if (!state.seeking) {\n    setState({ ...state,\n      played: progress\n    }); // }\n\n    console.log('played', state.played);\n    console.log('progress: ', progress);\n  }; // const renderLoadButton = (url:string, label:any) => {\n  //   return (\n  //     <button\n  //       className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n  //       onClick={() => load(url)}>\n  //       {label}\n  //     </button>\n  //   )\n  // }\n  // const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip } = state\n\n\n  const SEPARATOR = ' · ';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          className: \"react-player\",\n          ...state,\n          onProgress: handleProgress // url={VIDEO_URL}\n          // className='react-player'\n          // width='100%'\n          // height='100%'\n          // loop={true}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: 0,\n        max: 0.999999,\n        step: \"any\",\n        value: state.played.loaded,\n        onMouseDown: handleSeekMouseDown,\n        onChange: handleSeekChange,\n        onMouseUp: handleSeekMouseUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n} // {<div className=\"player-ui\">\n//    <input id='controls' type='checkbox' checked={controls} onChange={handleToggleControls} />\n//    <em>&nbsp; Requires player reload</em>\n//   {renderLoadButton(VIDEO_URL, 'Play')}\n//   {<button \n//     className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n//     type=\"button\"\n//     onClick={onClick.play}>Play</button>}\n//   {<button onClick={onClick.pause}>{state ? 'Pause' : 'Play'}</button>}\n\n\n_s(App, \"qk+JNkVCk5/FV8jyXhuKZ8xbCH0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seito/Documents/develop/shadowX/my-app/src/App.tsx"],"names":["React","useState","useRef","ReactPlayer","VIDEO_URL","App","inputRange","state","setState","ref","url","width","height","loop","played","seeking","handleSeekMouseDown","e","handleSeekChange","parseFloat","target","value","handleSeekMouseUp","current","seekTo","handleProgress","progress","console","log","SEPARATOR","loaded"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport ReactPlayer from 'react-player'\n// import Duration from './Duration'\nimport Player from '@vimeo/player'\n// '@types/vimeo__player'\n\n// const player = new Player(ReactPlayer);\n\ninterface Props {\n  ref: any\n  url: string\n  width: string\n  height: string\n  // pip: boolean\n  // playing: boolean\n  // controls: boolean\n  // light: boolean\n  // volume: number\n  // muted: boolean\n  played: any\n  // loaded: number\n  // duration: number\n  // playbackRate: number\n  loop: boolean\n  seeking: boolean\n}\n\nconst VIDEO_URL = 'https://player.vimeo.com/video/575873877'\n\nfunction App() {\n\n  const inputRange = useRef<any>('');\n  const [ state, setState ] = useState<Props>({\n    ref: inputRange,\n    url: VIDEO_URL,\n    width: '100%',\n    height: '100%',\n    loop: true,\n    played: 0,\n    seeking: false\n  })\n  \n  \n  // player.setCurrentTime(0)\n\n  // inputRange.current.on('play', function() {\n  //   console.log('played the video!');\n  // });\n\n  // console.log('player:', player)\n\n  const handleSeekMouseDown = (e:any) => {\n    setState({ \n      ...state,\n      seeking: true \n    })\n  }\n\n  const handleSeekChange = (e:any) => {\n    setState({ \n      ...state,\n      played: parseFloat(e.target.value) \n     })\n  }\n\n  const handleSeekMouseUp = (e:any) => {\n    setState({ \n      ...state,\n      seeking: false \n     })\n     inputRange.current.seekTo(parseFloat(e.target.value));\n  }\n\n  const handleProgress = (progress:any) => {\n    // We only want to update time slider if we are not currently seeking\n    // if (!state.seeking) {\n    setState({\n      ...state,\n      played: progress\n    })\n    // }\n    console.log('played', state.played)\n    console.log('progress: ', progress)\n  }\n  \n\n  // const renderLoadButton = (url:string, label:any) => {\n  //   return (\n  //     <button\n  //       className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n  //       onClick={() => load(url)}>\n  //       {label}\n  //     </button>\n  //   )\n  // }\n\n  // const { url, playing, controls, light, volume, muted, loop, played, loaded, duration, playbackRate, pip } = state\n  const SEPARATOR = ' · '\n\n  return (\n    <div className=\"App\">\n        \n      <div className=\"player-wrapper\">\n        <div className='player-wrapper'>\n          <ReactPlayer \n          className='react-player' \n          {...state}\n          onProgress={handleProgress}\n            // url={VIDEO_URL}\n            // className='react-player'\n            // width='100%'\n            // height='100%'\n            // loop={true}\n          />\n        </div>\n\n         <input\n          type='range' min={0} max={0.999999} step='any'\n          value={state.played.loaded}\n          onMouseDown={handleSeekMouseDown}\n          onChange={handleSeekChange}\n          onMouseUp={handleSeekMouseUp} />\n       </div>\n    </div>\n  )\n}\n \n       // {<div className=\"player-ui\">\n       //    <input id='controls' type='checkbox' checked={controls} onChange={handleToggleControls} />\n       //    <em>&nbsp; Requires player reload</em>\n       //   {renderLoadButton(VIDEO_URL, 'Play')}\n       //   {<button \n       //     className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"\n       //     type=\"button\"\n       //     onClick={onClick.play}>Play</button>}\n\n       //   {<button onClick={onClick.pause}>{state ? 'Pause' : 'Play'}</button>}\n       \n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}