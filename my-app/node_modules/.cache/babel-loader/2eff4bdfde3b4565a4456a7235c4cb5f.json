{"ast":null,"code":"const {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  addUtilities,\n  matchUtilities\n}) {\n  matchUtilities({\n    'divide-x': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['divideWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      value = value === '0' ? '0px' : value;\n      return {\n        [`${nameClass('divide-x', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-divide-x-reverse': '0',\n          'border-right-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n          'border-left-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`\n        }\n      };\n    },\n    'divide-y': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['divideWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      value = value === '0' ? '0px' : value;\n      return {\n        [`${nameClass('divide-y', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-divide-y-reverse': '0',\n          'border-top-width': `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,\n          'border-bottom-width': `calc(${value} * var(--tw-divide-y-reverse))`\n        }\n      };\n    }\n  });\n  addUtilities({\n    '.divide-y-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-divide-y-reverse': '1'\n    },\n    '.divide-x-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-divide-x-reverse': '1'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/divideWidth.js"],"names":["asLength","nameClass","require","module","exports","addUtilities","matchUtilities","modifier","theme","value","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BC,OAAO,CAAC,gBAAD,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAV,EAA4C;AAC3DA,EAAAA,cAAc,CAAC;AACb,gBAAY,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAEDD,MAAAA,KAAK,GAAGA,KAAK,KAAK,GAAV,GAAgB,KAAhB,GAAwBA,KAAhC;AAEA,aAAO;AACL,SAAE,GAAER,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAuB,oCAApC,GAA0E;AACxE,mCAAyB,GAD+C;AAExE,gCAAuB,QAAOE,KAAM,gCAFoC;AAGxE,+BAAsB,QAAOA,KAAM;AAHqC;AADrE,OAAP;AAOD,KAjBY;AAkBb,gBAAY,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAEDD,MAAAA,KAAK,GAAGA,KAAK,KAAK,GAAV,GAAgB,KAAhB,GAAwBA,KAAhC;AAEA,aAAO;AACL,SAAE,GAAER,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAuB,oCAApC,GAA0E;AACxE,mCAAyB,GAD+C;AAExE,8BAAqB,QAAOE,KAAM,0CAFsC;AAGxE,iCAAwB,QAAOA,KAAM;AAHmC;AADrE,OAAP;AAOD;AAlCY,GAAD,CAAd;AAqCAJ,EAAAA,YAAY,CAAC;AACX,2DAAuD;AACrD,+BAAyB;AAD4B,KAD5C;AAIX,2DAAuD;AACrD,+BAAyB;AAD4B;AAJ5C,GAAD,CAAZ;AAQD,CA9CD","sourcesContent":["const { asLength, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ addUtilities, matchUtilities }) {\n  matchUtilities({\n    'divide-x': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['divideWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      value = value === '0' ? '0px' : value\n\n      return {\n        [`${nameClass('divide-x', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-divide-x-reverse': '0',\n          'border-right-width': `calc(${value} * var(--tw-divide-x-reverse))`,\n          'border-left-width': `calc(${value} * calc(1 - var(--tw-divide-x-reverse)))`,\n        },\n      }\n    },\n    'divide-y': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['divideWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      value = value === '0' ? '0px' : value\n\n      return {\n        [`${nameClass('divide-y', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-divide-y-reverse': '0',\n          'border-top-width': `calc(${value} * calc(1 - var(--tw-divide-y-reverse)))`,\n          'border-bottom-width': `calc(${value} * var(--tw-divide-y-reverse))`,\n        },\n      }\n    },\n  })\n\n  addUtilities({\n    '.divide-y-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-divide-y-reverse': '1',\n    },\n    '.divide-x-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-divide-x-reverse': '1',\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}