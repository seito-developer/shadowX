{"ast":null,"code":"const {\n  nameClass\n} = require('../pluginUtils');\n\nconst transformThemeValue = require('../../lib/util/transformThemeValue').default;\n\nconst parseAnimationValue = require('../../lib/util/parseAnimationValue').default;\n\nmodule.exports = function ({\n  matchUtilities,\n  theme\n}) {\n  let keyframes = Object.fromEntries(Object.entries(theme('keyframes')).map(([key, value]) => {\n    return [key, [{\n      [`@keyframes ${key}`]: value\n    }, {\n      respectVariants: false\n    }]];\n  }));\n  let transformValue = transformThemeValue('animation');\n  matchUtilities({\n    animate: [(modifier, {\n      theme\n    }) => {\n      let value = transformValue(theme.animation[modifier]);\n\n      if (modifier === '' || value === undefined) {\n        return [];\n      }\n\n      let {\n        name: animationName\n      } = parseAnimationValue(value);\n      return [keyframes[animationName], {\n        [nameClass('animate', modifier)]: {\n          animation: value\n        }\n      }].filter(Boolean);\n    }]\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/animation.js"],"names":["nameClass","require","transformThemeValue","default","parseAnimationValue","module","exports","matchUtilities","theme","keyframes","Object","fromEntries","entries","map","key","value","respectVariants","transformValue","animate","modifier","animation","undefined","name","animationName","filter","Boolean"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,oCAAD,CAAP,CAA8CE,OAA1E;;AACA,MAAMC,mBAAmB,GAAGH,OAAO,CAAC,oCAAD,CAAP,CAA8CE,OAA1E;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAV,EAAqC;AACpD,MAAIC,SAAS,GAAGC,MAAM,CAACC,WAAP,CACdD,MAAM,CAACE,OAAP,CAAeJ,KAAK,CAAC,WAAD,CAApB,EAAmCK,GAAnC,CAAuC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACvD,WAAO,CACLD,GADK,EAEL,CACE;AACE,OAAE,cAAaA,GAAI,EAAnB,GAAuBC;AADzB,KADF,EAIE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAJF,CAFK,CAAP;AASD,GAVD,CADc,CAAhB;AAcA,MAAIC,cAAc,GAAGf,mBAAmB,CAAC,WAAD,CAAxC;AACAK,EAAAA,cAAc,CAAC;AACbW,IAAAA,OAAO,EAAE,CACP,CAACC,QAAD,EAAW;AAAEX,MAAAA;AAAF,KAAX,KAAyB;AACvB,UAAIO,KAAK,GAAGE,cAAc,CAACT,KAAK,CAACY,SAAN,CAAgBD,QAAhB,CAAD,CAA1B;;AAEA,UAAIA,QAAQ,KAAK,EAAb,IAAmBJ,KAAK,KAAKM,SAAjC,EAA4C;AAC1C,eAAO,EAAP;AACD;;AAED,UAAI;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAA0BnB,mBAAmB,CAACW,KAAD,CAAjD;AAEA,aAAO,CACLN,SAAS,CAACc,aAAD,CADJ,EAEL;AAAE,SAACvB,SAAS,CAAC,SAAD,EAAYmB,QAAZ,CAAV,GAAkC;AAAEC,UAAAA,SAAS,EAAEL;AAAb;AAApC,OAFK,EAGLS,MAHK,CAGEC,OAHF,CAAP;AAID,KAdM;AADI,GAAD,CAAd;AAkBD,CAlCD","sourcesContent":["const { nameClass } = require('../pluginUtils')\nconst transformThemeValue = require('../../lib/util/transformThemeValue').default\nconst parseAnimationValue = require('../../lib/util/parseAnimationValue').default\n\nmodule.exports = function ({ matchUtilities, theme }) {\n  let keyframes = Object.fromEntries(\n    Object.entries(theme('keyframes')).map(([key, value]) => {\n      return [\n        key,\n        [\n          {\n            [`@keyframes ${key}`]: value,\n          },\n          { respectVariants: false },\n        ],\n      ]\n    })\n  )\n\n  let transformValue = transformThemeValue('animation')\n  matchUtilities({\n    animate: [\n      (modifier, { theme }) => {\n        let value = transformValue(theme.animation[modifier])\n\n        if (modifier === '' || value === undefined) {\n          return []\n        }\n\n        let { name: animationName } = parseAnimationValue(value)\n\n        return [\n          keyframes[animationName],\n          { [nameClass('animate', modifier)]: { animation: value } },\n        ].filter(Boolean)\n      },\n    ],\n  })\n}\n"]},"metadata":{},"sourceType":"script"}