{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.disposables = disposables;\nexports.shared = void 0;\n\nfunction disposables() {\n  let disposables = [];\n  let api = {\n    add(cb) {\n      disposables.push(cb);\n      return () => {\n        let idx = disposables.indexOf(cb);\n        if (idx !== -1) disposables.splice(idx, 1);\n      };\n    },\n\n    dispose() {\n      disposables.splice(0).forEach(dispose => dispose());\n    }\n\n  };\n  return api;\n} // A shared disposables collection\n\n\nlet shared = disposables();\nexports.shared = shared;","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/lib/util/disposables.js"],"names":["Object","defineProperty","exports","value","disposables","shared","api","add","cb","push","idx","indexOf","splice","dispose","forEach"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAAtB;;AAEA,SAASD,WAAT,GAAuB;AACrB,MAAIA,WAAW,GAAG,EAAlB;AACA,MAAIE,GAAG,GAAG;AACRC,IAAAA,GAAG,CAACC,EAAD,EAAK;AACNJ,MAAAA,WAAW,CAACK,IAAZ,CAAiBD,EAAjB;AACA,aAAO,MAAM;AACX,YAAIE,GAAG,GAAGN,WAAW,CAACO,OAAZ,CAAoBH,EAApB,CAAV;AACA,YAAIE,GAAG,KAAK,CAAC,CAAb,EAAgBN,WAAW,CAACQ,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB;AACjB,OAHD;AAID,KAPO;;AASRG,IAAAA,OAAO,GAAG;AACRT,MAAAA,WAAW,CAACQ,MAAZ,CAAmB,CAAnB,EAAsBE,OAAtB,CAA8BD,OAAO,IAAIA,OAAO,EAAhD;AACD;;AAXO,GAAV;AAcA,SAAOP,GAAP;AACD,C,CAAC;;;AAGF,IAAID,MAAM,GAAGD,WAAW,EAAxB;AACAF,OAAO,CAACG,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.disposables = disposables;\nexports.shared = void 0;\n\nfunction disposables() {\n  let disposables = [];\n  let api = {\n    add(cb) {\n      disposables.push(cb);\n      return () => {\n        let idx = disposables.indexOf(cb);\n        if (idx !== -1) disposables.splice(idx, 1);\n      };\n    },\n\n    dispose() {\n      disposables.splice(0).forEach(dispose => dispose());\n    }\n\n  };\n  return api;\n} // A shared disposables collection\n\n\nlet shared = disposables();\nexports.shared = shared;"]},"metadata":{},"sourceType":"script"}