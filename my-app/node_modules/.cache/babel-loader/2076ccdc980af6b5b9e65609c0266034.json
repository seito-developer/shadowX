{"ast":null,"code":"const {\n  asValue,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  matchUtilities\n}) {\n  matchUtilities({\n    scale: (modifier, {\n      theme\n    }) => {\n      let value = asValue(modifier, theme.scale);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('scale', modifier)]: {\n          '--tw-scale-x': value,\n          '--tw-scale-y': value\n        }\n      };\n    }\n  });\n  matchUtilities({\n    'scale-x': (modifier, {\n      theme\n    }) => {\n      let value = asValue(modifier, theme.scale);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('scale-x', modifier)]: {\n          '--tw-scale-x': value\n        }\n      };\n    },\n    'scale-y': (modifier, {\n      theme\n    }) => {\n      let value = asValue(modifier, theme.scale);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('scale-y', modifier)]: {\n          '--tw-scale-y': value\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/scale.js"],"names":["asValue","nameClass","require","module","exports","matchUtilities","scale","modifier","theme","value","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAyBC,OAAO,CAAC,gBAAD,CAAtC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAA8B;AAC7CA,EAAAA,cAAc,CAAC;AACbC,IAAAA,KAAK,EAAE,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAC9B,UAAIC,KAAK,GAAGT,OAAO,CAACO,QAAD,EAAWC,KAAK,CAACF,KAAjB,CAAnB;;AAEA,UAAIG,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,OAAD,EAAUM,QAAV,CAAV,GAAgC;AAAE,0BAAgBE,KAAlB;AAAyB,0BAAgBA;AAAzC;AAAlC,OAAP;AACD;AATY,GAAD,CAAd;AAWAJ,EAAAA,cAAc,CAAC;AACb,eAAW,CAACE,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAClC,UAAIC,KAAK,GAAGT,OAAO,CAACO,QAAD,EAAWC,KAAK,CAACF,KAAjB,CAAnB;;AAEA,UAAIG,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,SAAD,EAAYM,QAAZ,CAAV,GAAkC;AAAE,0BAAgBE;AAAlB;AAApC,OAAP;AACD,KATY;AAUb,eAAW,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAClC,UAAIC,KAAK,GAAGT,OAAO,CAACO,QAAD,EAAWC,KAAK,CAACF,KAAjB,CAAnB;;AAEA,UAAIG,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,SAAD,EAAYM,QAAZ,CAAV,GAAkC;AAAE,0BAAgBE;AAAlB;AAApC,OAAP;AACD;AAlBY,GAAD,CAAd;AAoBD,CAhCD","sourcesContent":["const { asValue, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ matchUtilities }) {\n  matchUtilities({\n    scale: (modifier, { theme }) => {\n      let value = asValue(modifier, theme.scale)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('scale', modifier)]: { '--tw-scale-x': value, '--tw-scale-y': value } }\n    },\n  })\n  matchUtilities({\n    'scale-x': (modifier, { theme }) => {\n      let value = asValue(modifier, theme.scale)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('scale-x', modifier)]: { '--tw-scale-x': value } }\n    },\n    'scale-y': (modifier, { theme }) => {\n      let value = asValue(modifier, theme.scale)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('scale-y', modifier)]: { '--tw-scale-y': value } }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}