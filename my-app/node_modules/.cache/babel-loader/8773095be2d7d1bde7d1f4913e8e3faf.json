{"ast":null,"code":"/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nexport const isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nexport function getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n\n  return `${type.toLowerCase()}${prop.substr(0, 1).toUpperCase()}${prop.substr(1)}`;\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nexport function isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nexport function isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nexport function isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nexport function getVimeoUrl(oEmbedParameters = {}) {\n  const id = oEmbedParameters.id;\n  const url = oEmbedParameters.url;\n  const idOrUrl = id || url;\n\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n\n  if (isInteger(idOrUrl)) {\n    return `https://vimeo.com/${idOrUrl}`;\n  }\n\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n\n  if (id) {\n    throw new TypeError(`“${id}” is not a valid video id.`);\n  }\n\n  throw new TypeError(`“${idOrUrl}” is not a vimeo.com url.`);\n}","map":{"version":3,"sources":["/Users/seito/Documents/develop/shadowX/my-app/node_modules/@vimeo/player/src/lib/functions.js"],"names":["isNode","global","toString","call","getMethodName","prop","type","indexOf","toLowerCase","substr","toUpperCase","isDomElement","element","Boolean","nodeType","ownerDocument","defaultView","isInteger","value","isNaN","parseFloat","isFinite","Math","floor","isVimeoUrl","url","test","getVimeoUrl","oEmbedParameters","id","idOrUrl","Error","replace","TypeError"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AACA,OAAO,MAAMA,MAAM,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IACnB,EAAD,CAAKC,QAAL,CAAcC,IAAd,CAAmBF,MAAnB,MAA+B,iBAD1B;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACtC,MAAID,IAAI,CAACE,OAAL,CAAaD,IAAI,CAACE,WAAL,EAAb,MAAqC,CAAzC,EAA4C;AACxC,WAAOH,IAAP;AACH;;AAED,SAAQ,GAAEC,IAAI,CAACE,WAAL,EAAmB,GAAEH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBC,WAAlB,EAAgC,GAAEL,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAe,EAAhF;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAClC,SAAOC,OAAO,CACVD,OAAO,IAAIA,OAAO,CAACE,QAAR,KAAqB,CAAhC,IAAqC,cAAcF,OAAnD,IACAA,OAAO,CAACG,aADR,IACyBH,OAAO,CAACG,aAAR,CAAsBC,WAFrC,CAAd;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B;AACA,SAAO,CAACC,KAAK,CAACC,UAAU,CAACF,KAAD,CAAX,CAAN,IAA6BG,QAAQ,CAACH,KAAD,CAArC,IAAgDI,IAAI,CAACC,KAAL,CAAWL,KAAX,KAAqBA,KAA5E;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,UAAT,CAAoBC,GAApB,EAAyB;AAC5B,SAAQ,oDAAD,CAAuDC,IAAvD,CAA4DD,GAA5D,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,WAAT,CAAqBC,gBAAgB,GAAG,EAAxC,EAA4C;AAC/C,QAAMC,EAAE,GAAGD,gBAAgB,CAACC,EAA5B;AACA,QAAMJ,GAAG,GAAGG,gBAAgB,CAACH,GAA7B;AACA,QAAMK,OAAO,GAAGD,EAAE,IAAIJ,GAAtB;;AAEA,MAAI,CAACK,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,6GAAV,CAAN;AACH;;AAED,MAAId,SAAS,CAACa,OAAD,CAAb,EAAwB;AACpB,WAAQ,qBAAoBA,OAAQ,EAApC;AACH;;AAED,MAAIN,UAAU,CAACM,OAAD,CAAd,EAAyB;AACrB,WAAOA,OAAO,CAACE,OAAR,CAAgB,OAAhB,EAAyB,QAAzB,CAAP;AACH;;AAED,MAAIH,EAAJ,EAAQ;AACJ,UAAM,IAAII,SAAJ,CAAe,IAAGJ,EAAG,4BAArB,CAAN;AACH;;AAED,QAAM,IAAII,SAAJ,CAAe,IAAGH,OAAQ,2BAA1B,CAAN;AACH","sourcesContent":["/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n/* global global */\nexport const isNode = typeof global !== 'undefined' &&\n  ({}).toString.call(global) === '[object global]';\n\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\nexport function getMethodName(prop, type) {\n    if (prop.indexOf(type.toLowerCase()) === 0) {\n        return prop;\n    }\n\n    return `${type.toLowerCase()}${prop.substr(0, 1).toUpperCase()}${prop.substr(1)}`;\n}\n\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\nexport function isDomElement(element) {\n    return Boolean(\n        element && element.nodeType === 1 && 'nodeName' in element &&\n        element.ownerDocument && element.ownerDocument.defaultView\n    );\n}\n\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\nexport function isInteger(value) {\n    // eslint-disable-next-line eqeqeq\n    return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\nexport function isVimeoUrl(url) {\n    return (/^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/).test(url);\n}\n\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\nexport function getVimeoUrl(oEmbedParameters = {}) {\n    const id = oEmbedParameters.id;\n    const url = oEmbedParameters.url;\n    const idOrUrl = id || url;\n\n    if (!idOrUrl) {\n        throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n    }\n\n    if (isInteger(idOrUrl)) {\n        return `https://vimeo.com/${idOrUrl}`;\n    }\n\n    if (isVimeoUrl(idOrUrl)) {\n        return idOrUrl.replace('http:', 'https:');\n    }\n\n    if (id) {\n        throw new TypeError(`“${id}” is not a valid video id.`);\n    }\n\n    throw new TypeError(`“${idOrUrl}” is not a vimeo.com url.`);\n}\n"]},"metadata":{},"sourceType":"module"}