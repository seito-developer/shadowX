{"ast":null,"code":"var _jsxFileName = \"/Users/seito/Documents/develop/count-jp/my-app/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomCounts = () => {};\n\nfunction App() {\n  let speech = new SpeechSynthesisUtterance();\n  speech.lang = \"en\";\n  speech.text = '10000';\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1; // window.addEventListener('load', () => {\n  //   console.log(speechSynthesis.getVoices())\n  // })\n\n  const synth = window.speechSynthesis;\n  const voices = synth.getVoices();\n  console.log(voices);\n\n  const handleClick = () => {\n    // window.speechSynthesis.speak(speech);\n    // setTimeout(() => {\n    return new Promise(resolve => {\n      let voices = speechSynthesis.getVoices();\n\n      if (voices.length) {\n        resolve(voices);\n        return;\n      }\n\n      speechSynthesis.onvoiceschanged = () => {\n        voices = speechSynthesis.getVoices();\n        resolve(voices);\n        window.speechSynthesis.speak(speech);\n      };\n    }); // }\n    // return 'ja-JP';\n    // if(typeof speechSynthesis === 'undefined') {\n    //   return;\n    // }\n    // var voices = speechSynthesis.getVoices();\n    // for(var i = 0; i < voices.length; i++) {\n    //   var option = document.createElement('option');\n    //   option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n    //   if(voices[i].default) {\n    //     option.textContent += ' -- DEFAULT';\n    //   }\n    //   option.setAttribute('data-lang', voices[i].lang);\n    //   option.setAttribute('data-name', voices[i].name);\n    //   document.getElementById(\"voiceSelect\").appendChild(option);\n    // }\n    // }\n    // }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/src/App.tsx"],"names":["React","randomCounts","App","speech","SpeechSynthesisUtterance","lang","text","rate","volume","pitch","synth","window","speechSynthesis","voices","getVoices","console","log","handleClick","Promise","resolve","length","onvoiceschanged","speak"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,SAASC,GAAT,GAAe;AAEb,MAAIC,MAAM,GAAG,IAAIC,wBAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,IAAP,GAAc,IAAd;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAc,OAAd;AACAH,EAAAA,MAAM,CAACI,IAAP,GAAc,CAAd;AACAJ,EAAAA,MAAM,CAACK,MAAP,GAAgB,CAAhB;AACAL,EAAAA,MAAM,CAACM,KAAP,GAAe,CAAf,CAPa,CASb;AACA;AACA;;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,eAArB;AACA,QAAMC,MAAM,GAAGH,KAAK,CAACI,SAAN,EAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB;AAEA;AACA,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,UAAIN,MAAM,GAAGD,eAAe,CAACE,SAAhB,EAAb;;AACA,UAAID,MAAM,CAACO,MAAX,EAAmB;AACjBD,QAAAA,OAAO,CAACN,MAAD,CAAP;AACA;AACD;;AACDD,MAAAA,eAAe,CAACS,eAAhB,GAAkC,MAAM;AACtCR,QAAAA,MAAM,GAAGD,eAAe,CAACE,SAAhB,EAAT;AACAK,QAAAA,OAAO,CAACN,MAAD,CAAP;AACAF,QAAAA,MAAM,CAACC,eAAP,CAAuBU,KAAvB,CAA6BnB,MAA7B;AACD,OAJD;AAKD,KAXM,CAAP,CAJwB,CAgB1B;AACM;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACF;AAEF;AACD,GAvCD;;AAyCA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEc,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAjEQf,G;AAmET,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst randomCounts = () => {\n  \n}\n\nfunction App() {\n\n  let speech = new SpeechSynthesisUtterance();\n  speech.lang = \"en\";\n  speech.text = '10000';\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1;\n\n  // window.addEventListener('load', () => {\n  //   console.log(speechSynthesis.getVoices())\n  // })\n  const synth = window.speechSynthesis;\n  const voices = synth.getVoices();\n  console.log(voices);\n\n  const handleClick = () => {\n    // window.speechSynthesis.speak(speech);\n    \n    // setTimeout(() => {\n    return new Promise(resolve => {\n      let voices = speechSynthesis.getVoices()\n      if (voices.length) {\n        resolve(voices)\n        return\n      }\n      speechSynthesis.onvoiceschanged = () => {\n        voices = speechSynthesis.getVoices()\n        resolve(voices)\n        window.speechSynthesis.speak(speech);\n      }\n    })\n  // }\n        // return 'ja-JP';\n        // if(typeof speechSynthesis === 'undefined') {\n        //   return;\n        // }\n      \n        // var voices = speechSynthesis.getVoices();\n      \n        // for(var i = 0; i < voices.length; i++) {\n        //   var option = document.createElement('option');\n        //   option.textContent = voices[i].name + ' (' + voices[i].lang + ')';\n      \n        //   if(voices[i].default) {\n        //     option.textContent += ' -- DEFAULT';\n        //   }\n      \n        //   option.setAttribute('data-lang', voices[i].lang);\n        //   option.setAttribute('data-name', voices[i].name);\n        //   document.getElementById(\"voiceSelect\").appendChild(option);\n        // }\n      // }\n      \n    // }, 2000);\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <select>\n        { }\n      </select> */}\n      <button type=\"button\" onClick={handleClick}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}