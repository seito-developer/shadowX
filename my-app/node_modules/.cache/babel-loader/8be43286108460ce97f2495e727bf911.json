{"ast":null,"code":"var isCore = require('is-core-module');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar caller = require('./caller');\n\nvar nodeModulesPaths = require('./node-modules-paths');\n\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n  try {\n    var stat = fs.statSync(file);\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n\n  return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n  try {\n    var stat = fs.statSync(dir);\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n\n  return stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n  try {\n    return realpathFS(x);\n  } catch (realpathErr) {\n    if (realpathErr.code !== 'ENOENT') {\n      throw realpathErr;\n    }\n  }\n\n  return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n  if (opts && opts.preserveSymlinks === false) {\n    return realpathSync(x);\n  }\n\n  return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n  var body = readFileSync(pkgfile);\n\n  try {\n    var pkg = JSON.parse(body);\n    return pkg;\n  } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n  var dirs = nodeModulesPaths(start, opts, x);\n\n  for (var i = 0; i < dirs.length; i++) {\n    dirs[i] = path.join(dirs[i], x);\n  }\n\n  return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n  if (typeof x !== 'string') {\n    throw new TypeError('Path must be a string.');\n  }\n\n  var opts = normalizeOptions(x, options);\n  var isFile = opts.isFile || defaultIsFile;\n  var readFileSync = opts.readFileSync || fs.readFileSync;\n  var isDirectory = opts.isDirectory || defaultIsDir;\n  var realpathSync = opts.realpathSync || defaultRealpathSync;\n  var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n\n  if (opts.readFileSync && opts.readPackageSync) {\n    throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n  }\n\n  var packageIterator = opts.packageIterator;\n  var extensions = opts.extensions || ['.js'];\n  var includeCoreModules = opts.includeCoreModules !== false;\n  var basedir = opts.basedir || path.dirname(caller());\n  var parent = opts.filename || basedir;\n  opts.paths = opts.paths || []; // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n\n  var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n  if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)) {\n    var res = path.resolve(absoluteStart, x);\n    if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n    var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n    if (m) return maybeRealpathSync(realpathSync, m, opts);\n  } else if (includeCoreModules && isCore(x)) {\n    return x;\n  } else {\n    var n = loadNodeModulesSync(x, absoluteStart);\n    if (n) return maybeRealpathSync(realpathSync, n, opts);\n  }\n\n  var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n\n  function loadAsFileSync(x) {\n    var pkg = loadpkg(path.dirname(x));\n\n    if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n      var rfile = path.relative(pkg.dir, x);\n      var r = opts.pathFilter(pkg.pkg, x, rfile);\n\n      if (r) {\n        x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (isFile(x)) {\n      return x;\n    }\n\n    for (var i = 0; i < extensions.length; i++) {\n      var file = x + extensions[i];\n\n      if (isFile(file)) {\n        return file;\n      }\n    }\n  }\n\n  function loadpkg(dir) {\n    if (dir === '' || dir === '/') return;\n\n    if (process.platform === 'win32' && /^\\w:[/\\\\]*$/.test(dir)) {\n      return;\n    }\n\n    if (/[/\\\\]node_modules[/\\\\]*$/.test(dir)) return;\n    var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n    if (!isFile(pkgfile)) {\n      return loadpkg(path.dirname(dir));\n    }\n\n    var pkg = readPackageSync(readFileSync, pkgfile);\n\n    if (pkg && opts.packageFilter) {\n      // v2 will pass pkgfile\n      pkg = opts.packageFilter(pkg,\n      /*pkgfile,*/\n      dir); // eslint-disable-line spaced-comment\n    }\n\n    return {\n      pkg: pkg,\n      dir: dir\n    };\n  }\n\n  function loadAsDirectorySync(x) {\n    var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n\n    if (isFile(pkgfile)) {\n      try {\n        var pkg = readPackageSync(readFileSync, pkgfile);\n      } catch (e) {}\n\n      if (pkg && opts.packageFilter) {\n        // v2 will pass pkgfile\n        pkg = opts.packageFilter(pkg,\n        /*pkgfile,*/\n        x); // eslint-disable-line spaced-comment\n      }\n\n      if (pkg && pkg.main) {\n        if (typeof pkg.main !== 'string') {\n          var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n          mainError.code = 'INVALID_PACKAGE_MAIN';\n          throw mainError;\n        }\n\n        if (pkg.main === '.' || pkg.main === './') {\n          pkg.main = 'index';\n        }\n\n        try {\n          var m = loadAsFileSync(path.resolve(x, pkg.main));\n          if (m) return m;\n          var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n          if (n) return n;\n        } catch (e) {}\n      }\n    }\n\n    return loadAsFileSync(path.join(x, '/index'));\n  }\n\n  function loadNodeModulesSync(x, start) {\n    var thunk = function () {\n      return getPackageCandidates(x, start, opts);\n    };\n\n    var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n    for (var i = 0; i < dirs.length; i++) {\n      var dir = dirs[i];\n\n      if (isDirectory(path.dirname(dir))) {\n        var m = loadAsFileSync(dir);\n        if (m) return m;\n        var n = loadAsDirectorySync(dir);\n        if (n) return n;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/resolve/lib/sync.js"],"names":["isCore","require","fs","path","caller","nodeModulesPaths","normalizeOptions","realpathFS","realpathSync","native","defaultIsFile","isFile","file","stat","statSync","e","code","isFIFO","defaultIsDir","isDirectory","dir","defaultRealpathSync","x","realpathErr","maybeRealpathSync","opts","preserveSymlinks","defaultReadPackageSync","readFileSync","pkgfile","body","pkg","JSON","parse","jsonErr","getPackageCandidates","start","dirs","i","length","join","module","exports","resolveSync","options","TypeError","readPackageSync","packageIterator","extensions","includeCoreModules","basedir","dirname","parent","filename","paths","absoluteStart","resolve","test","res","slice","m","loadAsFileSync","loadAsDirectorySync","n","loadNodeModulesSync","err","Error","loadpkg","pathFilter","rfile","relative","r","process","platform","packageFilter","main","mainError","name","thunk"],"mappings":"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","sourcesContent":["var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}