{"ast":null,"code":"var _jsxFileName = \"/Users/seito/Documents/develop/count-jp/my-app/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  let speech = new SpeechSynthesisUtterance();\n  speech.lang = \"en\";\n  speech.text = '10000';\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1;\n  let voices = []; // const client = new textToSpeech.TextToSpeechClient();\n  // async function quickStart() {\n  //   // The text to synthesize\n  //   const text = 'hello, world!';\n  //   // Construct the request\n  //   const request:RequestProps = {\n  //     input: {text: text},\n  //     // Select the language and SSML voice gender (optional)\n  //     voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\n  //     // select the type of audio encoding\n  //     audioConfig: {audioEncoding: 'MP3'}\n  //   };\n  //   // Performs the text-to-speech request\n  //   const [response] = await client.synthesizeSpeech(request);\n  //   // Write the binary audio content to a local file\n  //   const writeFile = util.promisify(fs.writeFile);\n  //   await writeFile('output.mp3', response.audioContent, 'binary');\n  //   console.log('Audio content written to file: output.mp3');\n  // }\n\n  const handleClick = () => {\n    window.speechSynthesis.speak(speech); // quickStart();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/src/App.tsx"],"names":["React","App","speech","SpeechSynthesisUtterance","lang","text","rate","volume","pitch","voices","handleClick","window","speechSynthesis","speak"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;;AAYA,SAASC,GAAT,GAAe;AAEb,MAAIC,MAAM,GAAG,IAAIC,wBAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,IAAP,GAAc,IAAd;AACAF,EAAAA,MAAM,CAACG,IAAP,GAAc,OAAd;AACAH,EAAAA,MAAM,CAACI,IAAP,GAAc,CAAd;AACAJ,EAAAA,MAAM,CAACK,MAAP,GAAgB,CAAhB;AACAL,EAAAA,MAAM,CAACM,KAAP,GAAe,CAAf;AACA,MAAIC,MAAM,GAAG,EAAb,CARa,CAYb;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,eAAP,CAAuBC,KAAvB,CAA6BX,MAA7B,EADwB,CAExB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEQ,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KA7CQT,G;AA+CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport textToSpeech from '@google-cloud/text-to-speech';\nimport fs from 'fs';\nimport util from 'util';\n// import { GOOGLE_APPLICATION_CREDENTIALS } from './const';\n\ninterface RequestProps {\n  input: any\n  voice: any\n  audioConfig: any\n}\n\nfunction App() {\n\n  let speech = new SpeechSynthesisUtterance();\n  speech.lang = \"en\";\n  speech.text = '10000';\n  speech.rate = 1;\n  speech.volume = 1;\n  speech.pitch = 1;\n  let voices = [];\n\n  \n  \n  // const client = new textToSpeech.TextToSpeechClient();\n  \n  // async function quickStart() {\n  //   // The text to synthesize\n  //   const text = 'hello, world!';\n\n  //   // Construct the request\n  //   const request:RequestProps = {\n  //     input: {text: text},\n  //     // Select the language and SSML voice gender (optional)\n  //     voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\n  //     // select the type of audio encoding\n  //     audioConfig: {audioEncoding: 'MP3'}\n  //   };\n\n  //   // Performs the text-to-speech request\n  //   const [response] = await client.synthesizeSpeech(request);\n  //   // Write the binary audio content to a local file\n  //   const writeFile = util.promisify(fs.writeFile);\n  //   await writeFile('output.mp3', response.audioContent, 'binary');\n  //   console.log('Audio content written to file: output.mp3');\n  // }\n\n  const handleClick = () => {\n    window.speechSynthesis.speak(speech);\n    // quickStart();\n  }\n\n  return (\n    <div className=\"App\">\n      <button type=\"button\" onClick={handleClick}>Click me!</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}