{"ast":null,"code":"var _jsxFileName = \"/Users/seito/Documents/develop/shadowX/my-app/src/Duration.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Duration = ({\n  className,\n  seconds\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"time\", {\n    dateTime: `P${Math.round(seconds)}S`,\n    className: className,\n    children: format(seconds)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Duration;\n\nfunction format(seconds) {\n  const date = new Date(seconds * 1000);\n  const hh = date.getUTCHours();\n  const mm = date.getUTCMinutes();\n  const ss = pad(date.getUTCSeconds());\n\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`;\n  }\n\n  return `${mm}:${ss}`;\n}\n\nfunction pad(string) {\n  return ('0' + string).slice(-2);\n}\n\nexport default Duration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Duration\");","map":{"version":3,"sources":["/Users/seito/Documents/develop/shadowX/my-app/src/Duration.tsx"],"names":["React","Duration","className","seconds","Math","round","format","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","string","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,QAAwB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAC3D,sBACE;AAAM,IAAA,QAAQ,EAAG,IAAGC,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAoB,GAAxC;AAA4C,IAAA,SAAS,EAAED,SAAvD;AAAA,cACGI,MAAM,CAACH,OAAD;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMF,Q;;AAQN,SAASK,MAAT,CAAiBH,OAAjB,EAA8B;AAC5B,QAAMI,IAAI,GAAG,IAAIC,IAAJ,CAASL,OAAO,GAAG,IAAnB,CAAb;AACA,QAAMM,EAAE,GAAGF,IAAI,CAACG,WAAL,EAAX;AACA,QAAMC,EAAE,GAAGJ,IAAI,CAACK,aAAL,EAAX;AACA,QAAMC,EAAE,GAAGC,GAAG,CAACP,IAAI,CAACQ,aAAL,EAAD,CAAd;;AACA,MAAIN,EAAJ,EAAQ;AACN,WAAQ,GAAEA,EAAG,IAAGK,GAAG,CAACH,EAAD,CAAK,IAAGE,EAAG,EAA9B;AACD;;AACD,SAAQ,GAAEF,EAAG,IAAGE,EAAG,EAAnB;AACD;;AAED,SAASC,GAAT,CAAcE,MAAd,EAA6B;AAC3B,SAAO,CAAC,MAAMA,MAAP,EAAeC,KAAf,CAAqB,CAAC,CAAtB,CAAP;AACD;;AAED,eAAehB,QAAf","sourcesContent":["import React from 'react'\n\ninterface Props {\n  className?: any\n  seconds: any\n}\n\nconst Duration:React.FC<Props> = ({ className, seconds }) => {\n  return (\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\n      {format(seconds)}\n    </time>\n  )\n}\n\nfunction format (seconds:any) {\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = pad(date.getUTCSeconds())\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`\n  }\n  return `${mm}:${ss}`\n}\n\nfunction pad (string:string) {\n  return ('0' + string).slice(-2)\n}\n\nexport default Duration"]},"metadata":{},"sourceType":"module"}