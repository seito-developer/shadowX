{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getAllConfigs;\n\nvar _defaultConfigStub = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub.js\"));\n\nvar _featureFlags = require(\"../featureFlags\");\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getAllConfigs(config) {\n  const configs = (0, _lodash.flatMap)([...(0, _lodash.get)(config, 'presets', [_defaultConfigStub.default])].reverse(), preset => {\n    return getAllConfigs((0, _lodash.isFunction)(preset) ? preset() : preset);\n  });\n  const features = {// Add experimental configs here...\n  };\n  Object.keys(features).forEach(feature => {\n    if ((0, _featureFlags.flagEnabled)(config, feature)) {\n      configs.unshift(features[feature]);\n    }\n  });\n  return [config, ...configs];\n}","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/lib/util/getAllConfigs.js"],"names":["Object","defineProperty","exports","value","default","getAllConfigs","_defaultConfigStub","_interopRequireDefault","require","_featureFlags","_lodash","obj","__esModule","config","configs","flatMap","get","reverse","preset","isFunction","features","keys","forEach","feature","flagEnabled","unshift"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,kBAAkB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,mCAAD,CAAR,CAA/C;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,QAAD,CAArB;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;;AAE/F,SAASN,aAAT,CAAuBQ,MAAvB,EAA+B;AAC7B,QAAMC,OAAO,GAAG,CAAC,GAAGJ,OAAO,CAACK,OAAZ,EAAqB,CAAC,GAAG,CAAC,GAAGL,OAAO,CAACM,GAAZ,EAAiBH,MAAjB,EAAyB,SAAzB,EAAoC,CAACP,kBAAkB,CAACF,OAApB,CAApC,CAAJ,EAAuEa,OAAvE,EAArB,EAAuGC,MAAM,IAAI;AAC/H,WAAOb,aAAa,CAAC,CAAC,GAAGK,OAAO,CAACS,UAAZ,EAAwBD,MAAxB,IAAkCA,MAAM,EAAxC,GAA6CA,MAA9C,CAApB;AACD,GAFe,CAAhB;AAGA,QAAME,QAAQ,GAAG,CAAC;AAAD,GAAjB;AAEApB,EAAAA,MAAM,CAACqB,IAAP,CAAYD,QAAZ,EAAsBE,OAAtB,CAA8BC,OAAO,IAAI;AACvC,QAAI,CAAC,GAAGd,aAAa,CAACe,WAAlB,EAA+BX,MAA/B,EAAuCU,OAAvC,CAAJ,EAAqD;AACnDT,MAAAA,OAAO,CAACW,OAAR,CAAgBL,QAAQ,CAACG,OAAD,CAAxB;AACD;AACF,GAJD;AAKA,SAAO,CAACV,MAAD,EAAS,GAAGC,OAAZ,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getAllConfigs;\n\nvar _defaultConfigStub = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub.js\"));\n\nvar _featureFlags = require(\"../featureFlags\");\n\nvar _lodash = require(\"lodash\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getAllConfigs(config) {\n  const configs = (0, _lodash.flatMap)([...(0, _lodash.get)(config, 'presets', [_defaultConfigStub.default])].reverse(), preset => {\n    return getAllConfigs((0, _lodash.isFunction)(preset) ? preset() : preset);\n  });\n  const features = {// Add experimental configs here...\n  };\n  Object.keys(features).forEach(feature => {\n    if ((0, _featureFlags.flagEnabled)(config, feature)) {\n      configs.unshift(features[feature]);\n    }\n  });\n  return [config, ...configs];\n}"]},"metadata":{},"sourceType":"script"}