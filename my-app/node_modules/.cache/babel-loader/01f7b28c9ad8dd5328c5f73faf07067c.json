{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\n\nfunction uriToBlob(uri, done) {\n  var xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n\n  xhr.onload = function () {\n    var blob = xhr.response;\n    done(null, blob);\n  };\n\n  xhr.onerror = function (err) {\n    done(err);\n  };\n\n  xhr.open(\"GET\", uri);\n  xhr.send();\n}\n\nexports.default = uriToBlob;","map":{"version":3,"sources":["/Users/seito/Documents/develop/shadowX/node_modules/tus-js-client/lib.es5/browser/uriToBlob.js"],"names":["Object","defineProperty","exports","value","uriToBlob","uri","done","xhr","XMLHttpRequest","responseType","onload","blob","response","onerror","err","open","send","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;AACAF,EAAAA,GAAG,CAACG,MAAJ,GAAa,YAAY;AACvB,QAAIC,IAAI,GAAGJ,GAAG,CAACK,QAAf;AACAN,IAAAA,IAAI,CAAC,IAAD,EAAOK,IAAP,CAAJ;AACD,GAHD;;AAIAJ,EAAAA,GAAG,CAACM,OAAJ,GAAc,UAAUC,GAAV,EAAe;AAC3BR,IAAAA,IAAI,CAACQ,GAAD,CAAJ;AACD,GAFD;;AAGAP,EAAAA,GAAG,CAACQ,IAAJ,CAAS,KAAT,EAAgBV,GAAhB;AACAE,EAAAA,GAAG,CAACS,IAAJ;AACD;;AAEDd,OAAO,CAACe,OAAR,GAAkBb,SAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * uriToBlob resolves a URI to a Blob object. This is used for\n * React Native to retrieve a file (identified by a file://\n * URI) as a blob.\n */\nfunction uriToBlob(uri, done) {\n  var xhr = new XMLHttpRequest();\n  xhr.responseType = \"blob\";\n  xhr.onload = function () {\n    var blob = xhr.response;\n    done(null, blob);\n  };\n  xhr.onerror = function (err) {\n    done(err);\n  };\n  xhr.open(\"GET\", uri);\n  xhr.send();\n}\n\nexports.default = uriToBlob;"]},"metadata":{},"sourceType":"script"}