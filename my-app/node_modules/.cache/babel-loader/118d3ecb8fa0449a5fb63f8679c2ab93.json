{"ast":null,"code":"import random from'random';import roundTo from'round-to';var putPattern=function putPattern(){var base=Math.random();if(base<0.1){return'points';}else{if(base>=0.1&&base<=0.25){return'integer1';}else if(base>=0.26&&base<=0.4){return'integer2';}else if(base>=0.41&&base<=0.7){return'integer3';}else{return'integer4';}}};var randomCounts=function randomCounts(){var pattern=putPattern();var val;switch(pattern){case'points':var n=2;val=roundTo(Math.floor(Math.random()*Math.pow(10,n))/Math.pow(10,n),3);break;case'integer1':val=random.int(0,100);break;case'integer2':val=roundTo(random.int(1000,10000),-1);break;case'integer3':val=roundTo(random.int(10000,100000000),-6);break;case'integer4':val=roundTo(random.int(100000000,100000000000),-8);break;default:val=random.int(0,100);break;}return val.toString();};export default randomCounts;","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/src/funcRandomCounts.ts"],"names":["random","roundTo","putPattern","base","Math","randomCounts","pattern","val","n","floor","pow","int","toString"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMC,CAAAA,IAAW,CAAGC,IAAI,CAACJ,MAAL,EAApB,CACA,GAAGG,IAAI,CAAG,GAAV,CAAc,CACZ,MAAO,QAAP,CACD,CAFD,IAEO,CACL,GAAGA,IAAI,EAAI,GAAR,EAAeA,IAAI,EAAI,IAA1B,CAA+B,CAC7B,MAAO,UAAP,CACD,CAFD,IAEO,IAAGA,IAAI,EAAI,IAAR,EAAgBA,IAAI,EAAI,GAA3B,CAA+B,CACpC,MAAO,UAAP,CACD,CAFM,IAEA,IAAGA,IAAI,EAAI,IAAR,EAAgBA,IAAI,EAAI,GAA3B,CAA+B,CACpC,MAAO,UAAP,CACD,CAFM,IAEA,CACL,MAAO,UAAP,CACD,CACF,CACF,CAfD,CAiBA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,OAAc,CAAGJ,UAAU,EAAjC,CACA,GAAIK,CAAAA,GAAJ,CAEA,OAAOD,OAAP,EACE,IAAK,QAAL,CACE,GAAME,CAAAA,CAAC,CAAG,CAAV,CACID,GAAG,CAAGN,OAAO,CAACG,IAAI,CAACK,KAAL,CAAYL,IAAI,CAACJ,MAAL,GAAgBI,IAAI,CAACM,GAAL,CAAU,EAAV,CAAcF,CAAd,CAA5B,EAAkDJ,IAAI,CAACM,GAAL,CAAU,EAAV,CAAcF,CAAd,CAAnD,CAAsE,CAAtE,CAAb,CACJ,MACF,IAAK,UAAL,CACED,GAAG,CAAGP,MAAM,CAACW,GAAP,CAAW,CAAX,CAAc,GAAd,CAAN,CACA,MACF,IAAK,UAAL,CACEJ,GAAG,CAAGN,OAAO,CAACD,MAAM,CAACW,GAAP,CAAW,IAAX,CAAiB,KAAjB,CAAD,CAA0B,CAAC,CAA3B,CAAb,CACA,MACF,IAAK,UAAL,CACEJ,GAAG,CAAGN,OAAO,CAACD,MAAM,CAACW,GAAP,CAAW,KAAX,CAAkB,SAAlB,CAAD,CAA+B,CAAC,CAAhC,CAAb,CACA,MACF,IAAK,UAAL,CACEJ,GAAG,CAAGN,OAAO,CAACD,MAAM,CAACW,GAAP,CAAW,SAAX,CAAsB,YAAtB,CAAD,CAAsC,CAAC,CAAvC,CAAb,CACA,MACF,QACEJ,GAAG,CAAGP,MAAM,CAACW,GAAP,CAAW,CAAX,CAAc,GAAd,CAAN,CACA,MAnBJ,CAsBA,MAAOJ,CAAAA,GAAG,CAACK,QAAJ,EAAP,CACD,CA3BD,CA6BA,cAAeP,CAAAA,YAAf","sourcesContent":["import random from 'random';\nimport roundTo from 'round-to';\n\nconst putPattern = () => {\n  const base:number = Math.random();\n  if(base < 0.1){\n    return 'points';\n  } else {\n    if(base >= 0.1 && base <= 0.25){\n      return 'integer1';\n    } else if(base >= 0.26 && base <= 0.4){\n      return 'integer2';\n    } else if(base >= 0.41 && base <= 0.7){\n      return 'integer3';\n    } else {\n      return 'integer4';\n    }\n  }\n}\n\nconst randomCounts = () => {\n  const pattern:string = putPattern();\n  let val:number;\n\n  switch(pattern){\n    case 'points':\n      const n = 2;\n          val = roundTo(Math.floor( Math.random() * Math.pow( 10, n ) ) / Math.pow( 10, n ), 3);\n      break;\n    case 'integer1':\n      val = random.int(0, 100);\n      break;\n    case 'integer2':\n      val = roundTo(random.int(1000, 10000), -1);\n      break;\n    case 'integer3':\n      val = roundTo(random.int(10000, 100000000), -6);\n      break;\n    case 'integer4':\n      val = roundTo(random.int(100000000, 100000000000), -8);\n      break;\n    default:\n      val = random.int(0, 100);\n      break;\n  }\n  \n  return val.toString();\n}\n\nexport default randomCounts;"]},"metadata":{},"sourceType":"module"}