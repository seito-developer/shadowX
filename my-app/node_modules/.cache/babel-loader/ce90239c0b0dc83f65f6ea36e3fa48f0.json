{"ast":null,"code":"const {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  matchUtilities\n}) {\n  matchUtilities({\n    border: (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['borderWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('border', modifier)]: {\n          'border-width': value\n        }\n      };\n    }\n  });\n  matchUtilities({\n    'border-t': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['borderWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('border-t', modifier)]: {\n          'border-top-width': value\n        }\n      };\n    },\n    'border-r': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['borderWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('border-r', modifier)]: {\n          'border-right-width': value\n        }\n      };\n    },\n    'border-b': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['borderWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('border-b', modifier)]: {\n          'border-bottom-width': value\n        }\n      };\n    },\n    'border-l': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['borderWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('border-l', modifier)]: {\n          'border-left-width': value\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/borderWidth.js"],"names":["asLength","nameClass","require","module","exports","matchUtilities","border","modifier","theme","value","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BC,OAAO,CAAC,gBAAD,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAA8B;AAC7CA,EAAAA,cAAc,CAAC;AACbC,IAAAA,MAAM,EAAE,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAC/B,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,QAAD,EAAWM,QAAX,CAAV,GAAiC;AAAE,0BAAgBE;AAAlB;AAAnC,OAAP;AACD;AATY,GAAD,CAAd;AAWAJ,EAAAA,cAAc,CAAC;AACb,gBAAY,CAACE,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAV,GAAmC;AAAE,8BAAoBE;AAAtB;AAArC,OAAP;AACD,KATY;AAUb,gBAAY,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAV,GAAmC;AAAE,gCAAsBE;AAAxB;AAArC,OAAP;AACD,KAlBY;AAmBb,gBAAY,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAV,GAAmC;AAAE,iCAAuBE;AAAzB;AAArC,OAAP;AACD,KA3BY;AA4Bb,gBAAY,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACnC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,aAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACT,SAAS,CAAC,UAAD,EAAaM,QAAb,CAAV,GAAmC;AAAE,+BAAqBE;AAAvB;AAArC,OAAP;AACD;AApCY,GAAD,CAAd;AAsCD,CAlDD","sourcesContent":["const { asLength, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ matchUtilities }) {\n  matchUtilities({\n    border: (modifier, { theme }) => {\n      let value = asLength(modifier, theme['borderWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('border', modifier)]: { 'border-width': value } }\n    },\n  })\n  matchUtilities({\n    'border-t': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['borderWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('border-t', modifier)]: { 'border-top-width': value } }\n    },\n    'border-r': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['borderWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('border-r', modifier)]: { 'border-right-width': value } }\n    },\n    'border-b': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['borderWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('border-b', modifier)]: { 'border-bottom-width': value } }\n    },\n    'border-l': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['borderWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('border-l', modifier)]: { 'border-left-width': value } }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}