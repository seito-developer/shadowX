{"ast":null,"code":"const dlv = require('dlv');\n\nconst toRgba = require('../../lib/util/withAlphaVariable').toRgba;\n\nconst {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nfunction safeCall(callback, defaultValue) {\n  try {\n    return callback();\n  } catch (_error) {\n    return defaultValue;\n  }\n}\n\nmodule.exports = function ({\n  addBase,\n  matchUtilities,\n  addUtilities,\n  jit: {\n    theme\n  }\n}) {\n  let ringColorDefault = (([r, g, b]) => {\n    return `rgba(${r}, ${g}, ${b}, ${dlv(theme, ['ringOpacity', 'DEFAULT'], '0.5')})`;\n  })(safeCall(() => toRgba(dlv(theme, ['ringColor', 'DEFAULT'])), ['147', '197', '253']));\n\n  let ringReset = {\n    '*': {\n      '--tw-ring-inset': 'var(--tw-empty,/*!*/ /*!*/)',\n      '--tw-ring-offset-width': dlv(theme, ['ringOffsetWidth', 'DEFAULT'], '0px'),\n      '--tw-ring-offset-color': dlv(theme, ['ringOffsetColor', 'DEFAULT'], '#fff'),\n      '--tw-ring-color': ringColorDefault,\n      '--tw-ring-offset-shadow': '0 0 #0000',\n      '--tw-ring-shadow': '0 0 #0000'\n    }\n  };\n  addBase(ringReset);\n  matchUtilities({\n    ring: (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['ringWidth']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return [{\n        [nameClass('ring', modifier)]: {\n          '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n          '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n          'box-shadow': [`var(--tw-ring-offset-shadow)`, `var(--tw-ring-shadow)`, `var(--tw-shadow, 0 0 #0000)`].join(', ')\n        }\n      }];\n    }\n  });\n  addUtilities({\n    '.ring-inset': {\n      '--tw-ring-inset': 'inset'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/ringWidth.js"],"names":["dlv","require","toRgba","asLength","nameClass","safeCall","callback","defaultValue","_error","module","exports","addBase","matchUtilities","addUtilities","jit","theme","ringColorDefault","r","g","b","ringReset","ring","modifier","value","undefined","join"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,kCAAD,CAAP,CAA4CC,MAA3D;;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BH,OAAO,CAAC,gBAAD,CAAvC;;AAEA,SAASI,QAAT,CAAkBC,QAAlB,EAA4BC,YAA5B,EAA0C;AACxC,MAAI;AACF,WAAOD,QAAQ,EAAf;AACD,GAFD,CAEE,OAAOE,MAAP,EAAe;AACf,WAAOD,YAAP;AACD;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,YAA3B;AAAyCC,EAAAA,GAAG,EAAE;AAAEC,IAAAA;AAAF;AAA9C,CAAV,EAAqE;AACpF,MAAIC,gBAAgB,GAAG,CAAC,CAAC,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAD,KAAe;AACrC,WAAQ,QAAOF,CAAE,KAAIC,CAAE,KAAIC,CAAE,KAAInB,GAAG,CAACe,KAAD,EAAQ,CAAC,aAAD,EAAgB,SAAhB,CAAR,EAAoC,KAApC,CAA2C,GAA/E;AACD,GAFsB,EAEpBV,QAAQ,CAAC,MAAMH,MAAM,CAACF,GAAG,CAACe,KAAD,EAAQ,CAAC,WAAD,EAAc,SAAd,CAAR,CAAJ,CAAb,EAAqD,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAArD,CAFY,CAAvB;;AAIA,MAAIK,SAAS,GAAG;AACd,SAAK;AACH,yBAAmB,6BADhB;AAEH,gCAA0BpB,GAAG,CAACe,KAAD,EAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAR,EAAwC,KAAxC,CAF1B;AAGH,gCAA0Bf,GAAG,CAACe,KAAD,EAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAR,EAAwC,MAAxC,CAH1B;AAIH,yBAAmBC,gBAJhB;AAKH,iCAA2B,WALxB;AAMH,0BAAoB;AANjB;AADS,GAAhB;AAWAL,EAAAA,OAAO,CAACS,SAAD,CAAP;AAEAR,EAAAA,cAAc,CAAC;AACbS,IAAAA,IAAI,EAAE,CAACC,QAAD,EAAW;AAAEP,MAAAA;AAAF,KAAX,KAAyB;AAC7B,UAAIQ,KAAK,GAAGpB,QAAQ,CAACmB,QAAD,EAAWP,KAAK,CAAC,WAAD,CAAhB,CAApB;;AAEA,UAAIQ,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO,CACL;AACE,SAACpB,SAAS,CAAC,MAAD,EAASkB,QAAT,CAAV,GAA+B;AAC7B,qCAA4B,oFADC;AAE7B,8BAAqB,mCAAkCC,KAAM,sDAFhC;AAG7B,wBAAc,CACX,8BADW,EAEX,uBAFW,EAGX,6BAHW,EAIZE,IAJY,CAIP,IAJO;AAHe;AADjC,OADK,CAAP;AAaD;AArBY,GAAD,CAAd;AAwBAZ,EAAAA,YAAY,CAAC;AACX,mBAAe;AACb,yBAAmB;AADN;AADJ,GAAD,CAAZ;AAKD,CA/CD","sourcesContent":["const dlv = require('dlv')\nconst toRgba = require('../../lib/util/withAlphaVariable').toRgba\nconst { asLength, nameClass } = require('../pluginUtils')\n\nfunction safeCall(callback, defaultValue) {\n  try {\n    return callback()\n  } catch (_error) {\n    return defaultValue\n  }\n}\n\nmodule.exports = function ({ addBase, matchUtilities, addUtilities, jit: { theme } }) {\n  let ringColorDefault = (([r, g, b]) => {\n    return `rgba(${r}, ${g}, ${b}, ${dlv(theme, ['ringOpacity', 'DEFAULT'], '0.5')})`\n  })(safeCall(() => toRgba(dlv(theme, ['ringColor', 'DEFAULT'])), ['147', '197', '253']))\n\n  let ringReset = {\n    '*': {\n      '--tw-ring-inset': 'var(--tw-empty,/*!*/ /*!*/)',\n      '--tw-ring-offset-width': dlv(theme, ['ringOffsetWidth', 'DEFAULT'], '0px'),\n      '--tw-ring-offset-color': dlv(theme, ['ringOffsetColor', 'DEFAULT'], '#fff'),\n      '--tw-ring-color': ringColorDefault,\n      '--tw-ring-offset-shadow': '0 0 #0000',\n      '--tw-ring-shadow': '0 0 #0000',\n    },\n  }\n\n  addBase(ringReset)\n\n  matchUtilities({\n    ring: (modifier, { theme }) => {\n      let value = asLength(modifier, theme['ringWidth'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return [\n        {\n          [nameClass('ring', modifier)]: {\n            '--tw-ring-offset-shadow': `var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)`,\n            '--tw-ring-shadow': `var(--tw-ring-inset) 0 0 0 calc(${value} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n            'box-shadow': [\n              `var(--tw-ring-offset-shadow)`,\n              `var(--tw-ring-shadow)`,\n              `var(--tw-shadow, 0 0 #0000)`,\n            ].join(', '),\n          },\n        },\n      ]\n    },\n  })\n\n  addUtilities({\n    '.ring-inset': {\n      '--tw-ring-inset': 'inset',\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}