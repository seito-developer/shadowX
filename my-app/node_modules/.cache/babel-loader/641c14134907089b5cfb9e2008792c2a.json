{"ast":null,"code":"const {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nconst {\n  isPlainObject\n} = require('../lib/utils');\n\nmodule.exports = function ({\n  matchUtilities\n}) {\n  matchUtilities({\n    text: (modifier, {\n      theme\n    }) => {\n      let value = theme.fontSize[modifier];\n\n      if (value === undefined) {\n        value = asLength(modifier, {});\n        return value === undefined ? [] : {\n          [nameClass('text', modifier)]: {\n            'font-size': value\n          }\n        };\n      }\n\n      let [fontSize, options] = Array.isArray(value) ? value : [value];\n      let {\n        lineHeight,\n        letterSpacing\n      } = isPlainObject(options) ? options : {\n        lineHeight: options\n      };\n      return {\n        [nameClass('text', modifier)]: {\n          'font-size': fontSize,\n          ...(lineHeight === undefined ? {} : {\n            'line-height': lineHeight\n          }),\n          ...(letterSpacing === undefined ? {} : {\n            'letter-spacing': letterSpacing\n          })\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/fontSize.js"],"names":["asLength","nameClass","require","isPlainObject","module","exports","matchUtilities","text","modifier","theme","value","fontSize","undefined","options","Array","isArray","lineHeight","letterSpacing"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BC,OAAO,CAAC,gBAAD,CAAvC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,cAAD,CAAjC;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAA8B;AAC7CA,EAAAA,cAAc,CAAC;AACbC,IAAAA,IAAI,EAAE,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAC7B,UAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,CAAeH,QAAf,CAAZ;;AAEA,UAAIE,KAAK,KAAKE,SAAd,EAAyB;AACvBF,QAAAA,KAAK,GAAGV,QAAQ,CAACQ,QAAD,EAAW,EAAX,CAAhB;AAEA,eAAOE,KAAK,KAAKE,SAAV,GACH,EADG,GAEH;AACE,WAACX,SAAS,CAAC,MAAD,EAASO,QAAT,CAAV,GAA+B;AAC7B,yBAAaE;AADgB;AADjC,SAFJ;AAOD;;AAED,UAAI,CAACC,QAAD,EAAWE,OAAX,IAAsBC,KAAK,CAACC,OAAN,CAAcL,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAzD;AACA,UAAI;AAAEM,QAAAA,UAAF;AAAcC,QAAAA;AAAd,UAAgCd,aAAa,CAACU,OAAD,CAAb,GAChCA,OADgC,GAEhC;AACEG,QAAAA,UAAU,EAAEH;AADd,OAFJ;AAMA,aAAO;AACL,SAACZ,SAAS,CAAC,MAAD,EAASO,QAAT,CAAV,GAA+B;AAC7B,uBAAaG,QADgB;AAE7B,cAAIK,UAAU,KAAKJ,SAAf,GACA,EADA,GAEA;AACE,2BAAeI;AADjB,WAFJ,CAF6B;AAO7B,cAAIC,aAAa,KAAKL,SAAlB,GACA,EADA,GAEA;AACE,8BAAkBK;AADpB,WAFJ;AAP6B;AAD1B,OAAP;AAeD;AAtCY,GAAD,CAAd;AAwCD,CAzCD","sourcesContent":["const { asLength, nameClass } = require('../pluginUtils')\nconst { isPlainObject } = require('../lib/utils')\n\nmodule.exports = function ({ matchUtilities }) {\n  matchUtilities({\n    text: (modifier, { theme }) => {\n      let value = theme.fontSize[modifier]\n\n      if (value === undefined) {\n        value = asLength(modifier, {})\n\n        return value === undefined\n          ? []\n          : {\n              [nameClass('text', modifier)]: {\n                'font-size': value,\n              },\n            }\n      }\n\n      let [fontSize, options] = Array.isArray(value) ? value : [value]\n      let { lineHeight, letterSpacing } = isPlainObject(options)\n        ? options\n        : {\n            lineHeight: options,\n          }\n\n      return {\n        [nameClass('text', modifier)]: {\n          'font-size': fontSize,\n          ...(lineHeight === undefined\n            ? {}\n            : {\n                'line-height': lineHeight,\n              }),\n          ...(letterSpacing === undefined\n            ? {}\n            : {\n                'letter-spacing': letterSpacing,\n              }),\n        },\n      }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}