{"ast":null,"code":"const flattenColorPalette = require('../../lib/util/flattenColorPalette').default;\n\nconst toColorValue = require('../../lib/util/toColorValue').default;\n\nconst toRgba = require('../../lib/util/withAlphaVariable').toRgba;\n\nconst {\n  asColor,\n  nameClass\n} = require('../pluginUtils');\n\nfunction transparentTo(value) {\n  if (typeof value === 'function') {\n    return value({\n      opacityValue: 0\n    });\n  }\n\n  try {\n    const [r, g, b] = toRgba(value);\n    return `rgba(${r}, ${g}, ${b}, 0)`;\n  } catch (_error) {\n    return `rgba(255, 255, 255, 0)`;\n  }\n}\n\nmodule.exports = function ({\n  matchUtilities,\n  theme\n}) {\n  let colorPalette = flattenColorPalette(theme('gradientColorStops'));\n  matchUtilities({\n    from: modifier => {\n      let value = asColor(modifier, colorPalette);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      let transparentToValue = transparentTo(value);\n      return {\n        [nameClass('from', modifier)]: {\n          '--tw-gradient-from': toColorValue(value, 'from'),\n          '--tw-gradient-stops': `var(--tw-gradient-from), var(--tw-gradient-to, ${transparentToValue})`\n        }\n      };\n    }\n  });\n  matchUtilities({\n    via: modifier => {\n      let value = asColor(modifier, colorPalette);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      let transparentToValue = transparentTo(value);\n      return {\n        [nameClass('via', modifier)]: {\n          '--tw-gradient-stops': `var(--tw-gradient-from), ${toColorValue(value, 'via')}, var(--tw-gradient-to, ${transparentToValue})`\n        }\n      };\n    }\n  });\n  matchUtilities({\n    to: modifier => {\n      let value = asColor(modifier, colorPalette);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('to', modifier)]: {\n          '--tw-gradient-to': toColorValue(value, 'to')\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/gradientColorStops.js"],"names":["flattenColorPalette","require","default","toColorValue","toRgba","asColor","nameClass","transparentTo","value","opacityValue","r","g","b","_error","module","exports","matchUtilities","theme","colorPalette","from","modifier","undefined","transparentToValue","via","to"],"mappings":"AAAA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,oCAAD,CAAP,CAA8CC,OAA1E;;AACA,MAAMC,YAAY,GAAGF,OAAO,CAAC,6BAAD,CAAP,CAAuCC,OAA5D;;AACA,MAAME,MAAM,GAAGH,OAAO,CAAC,kCAAD,CAAP,CAA4CG,MAA3D;;AACA,MAAM;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAyBL,OAAO,CAAC,gBAAD,CAAtC;;AAEA,SAASM,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;AAC/B,WAAOA,KAAK,CAAC;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAD,CAAZ;AACD;;AAED,MAAI;AACF,UAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYR,MAAM,CAACI,KAAD,CAAxB;AACA,WAAQ,QAAOE,CAAE,KAAIC,CAAE,KAAIC,CAAE,MAA7B;AACD,GAHD,CAGE,OAAOC,MAAP,EAAe;AACf,WAAQ,wBAAR;AACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAV,EAAqC;AACpD,MAAIC,YAAY,GAAGlB,mBAAmB,CAACiB,KAAK,CAAC,oBAAD,CAAN,CAAtC;AAEAD,EAAAA,cAAc,CAAC;AACbG,IAAAA,IAAI,EAAGC,QAAD,IAAc;AAClB,UAAIZ,KAAK,GAAGH,OAAO,CAACe,QAAD,EAAWF,YAAX,CAAnB;;AAEA,UAAIV,KAAK,KAAKa,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,UAAIC,kBAAkB,GAAGf,aAAa,CAACC,KAAD,CAAtC;AAEA,aAAO;AACL,SAACF,SAAS,CAAC,MAAD,EAASc,QAAT,CAAV,GAA+B;AAC7B,gCAAsBjB,YAAY,CAACK,KAAD,EAAQ,MAAR,CADL;AAE7B,iCAAwB,kDAAiDc,kBAAmB;AAF/D;AAD1B,OAAP;AAMD;AAhBY,GAAD,CAAd;AAkBAN,EAAAA,cAAc,CAAC;AACbO,IAAAA,GAAG,EAAGH,QAAD,IAAc;AACjB,UAAIZ,KAAK,GAAGH,OAAO,CAACe,QAAD,EAAWF,YAAX,CAAnB;;AAEA,UAAIV,KAAK,KAAKa,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,UAAIC,kBAAkB,GAAGf,aAAa,CAACC,KAAD,CAAtC;AAEA,aAAO;AACL,SAACF,SAAS,CAAC,KAAD,EAAQc,QAAR,CAAV,GAA8B;AAC5B,iCAAwB,4BAA2BjB,YAAY,CAC7DK,KAD6D,EAE7D,KAF6D,CAG7D,2BAA0Bc,kBAAmB;AAJnB;AADzB,OAAP;AAQD;AAlBY,GAAD,CAAd;AAoBAN,EAAAA,cAAc,CAAC;AACbQ,IAAAA,EAAE,EAAGJ,QAAD,IAAc;AAChB,UAAIZ,KAAK,GAAGH,OAAO,CAACe,QAAD,EAAWF,YAAX,CAAnB;;AAEA,UAAIV,KAAK,KAAKa,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AACL,SAACf,SAAS,CAAC,IAAD,EAAOc,QAAP,CAAV,GAA6B;AAC3B,8BAAoBjB,YAAY,CAACK,KAAD,EAAQ,IAAR;AADL;AADxB,OAAP;AAKD;AAbY,GAAD,CAAd;AAeD,CAxDD","sourcesContent":["const flattenColorPalette = require('../../lib/util/flattenColorPalette').default\nconst toColorValue = require('../../lib/util/toColorValue').default\nconst toRgba = require('../../lib/util/withAlphaVariable').toRgba\nconst { asColor, nameClass } = require('../pluginUtils')\n\nfunction transparentTo(value) {\n  if (typeof value === 'function') {\n    return value({ opacityValue: 0 })\n  }\n\n  try {\n    const [r, g, b] = toRgba(value)\n    return `rgba(${r}, ${g}, ${b}, 0)`\n  } catch (_error) {\n    return `rgba(255, 255, 255, 0)`\n  }\n}\n\nmodule.exports = function ({ matchUtilities, theme }) {\n  let colorPalette = flattenColorPalette(theme('gradientColorStops'))\n\n  matchUtilities({\n    from: (modifier) => {\n      let value = asColor(modifier, colorPalette)\n\n      if (value === undefined) {\n        return []\n      }\n\n      let transparentToValue = transparentTo(value)\n\n      return {\n        [nameClass('from', modifier)]: {\n          '--tw-gradient-from': toColorValue(value, 'from'),\n          '--tw-gradient-stops': `var(--tw-gradient-from), var(--tw-gradient-to, ${transparentToValue})`,\n        },\n      }\n    },\n  })\n  matchUtilities({\n    via: (modifier) => {\n      let value = asColor(modifier, colorPalette)\n\n      if (value === undefined) {\n        return []\n      }\n\n      let transparentToValue = transparentTo(value)\n\n      return {\n        [nameClass('via', modifier)]: {\n          '--tw-gradient-stops': `var(--tw-gradient-from), ${toColorValue(\n            value,\n            'via'\n          )}, var(--tw-gradient-to, ${transparentToValue})`,\n        },\n      }\n    },\n  })\n  matchUtilities({\n    to: (modifier) => {\n      let value = asColor(modifier, colorPalette)\n\n      if (value === undefined) {\n        return []\n      }\n\n      return {\n        [nameClass('to', modifier)]: {\n          '--tw-gradient-to': toColorValue(value, 'to'),\n        },\n      }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}