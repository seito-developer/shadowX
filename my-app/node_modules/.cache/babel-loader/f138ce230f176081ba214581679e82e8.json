{"ast":null,"code":"const {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  matchUtilities\n}) {\n  matchUtilities({\n    'translate-x': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['translate']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('translate-x', modifier)]: {\n          '--tw-translate-x': value\n        }\n      };\n    },\n    'translate-y': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['translate']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [nameClass('translate-y', modifier)]: {\n          '--tw-translate-y': value\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/translate.js"],"names":["asLength","nameClass","require","module","exports","matchUtilities","modifier","theme","value","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BC,OAAO,CAAC,gBAAD,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAA8B;AAC7CA,EAAAA,cAAc,CAAC;AACb,mBAAe,CAACC,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACtC,UAAIC,KAAK,GAAGR,QAAQ,CAACM,QAAD,EAAWC,KAAK,CAAC,WAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACR,SAAS,CAAC,aAAD,EAAgBK,QAAhB,CAAV,GAAsC;AAAE,8BAAoBE;AAAtB;AAAxC,OAAP;AACD,KATY;AAUb,mBAAe,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AACtC,UAAIC,KAAK,GAAGR,QAAQ,CAACM,QAAD,EAAWC,KAAK,CAAC,WAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AAAE,SAACR,SAAS,CAAC,aAAD,EAAgBK,QAAhB,CAAV,GAAsC;AAAE,8BAAoBE;AAAtB;AAAxC,OAAP;AACD;AAlBY,GAAD,CAAd;AAoBD,CArBD","sourcesContent":["const { asLength, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ matchUtilities }) {\n  matchUtilities({\n    'translate-x': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['translate'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('translate-x', modifier)]: { '--tw-translate-x': value } }\n    },\n    'translate-y': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['translate'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return { [nameClass('translate-y', modifier)]: { '--tw-translate-y': value } }\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}