{"ast":null,"code":"const {\n  asLength,\n  nameClass\n} = require('../pluginUtils');\n\nmodule.exports = function ({\n  matchUtilities,\n  addUtilities\n}) {\n  matchUtilities({\n    'space-x': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['space']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [`${nameClass('space-x', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-space-x-reverse': '0',\n          'margin-right': `calc(${value} * var(--tw-space-x-reverse))`,\n          'margin-left': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`\n        }\n      };\n    },\n    'space-y': (modifier, {\n      theme\n    }) => {\n      let value = asLength(modifier, theme['space']);\n\n      if (value === undefined) {\n        return [];\n      }\n\n      return {\n        [`${nameClass('space-y', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-space-y-reverse': '0',\n          'margin-top': `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,\n          'margin-bottom': `calc(${value} * var(--tw-space-y-reverse))`\n        }\n      };\n    }\n  });\n  addUtilities({\n    '.space-y-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-space-y-reverse': '1'\n    },\n    '.space-x-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-space-x-reverse': '1'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/seito/Documents/develop/count-jp/my-app/node_modules/tailwindcss/jit/corePlugins/space.js"],"names":["asLength","nameClass","require","module","exports","matchUtilities","addUtilities","modifier","theme","value","undefined"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BC,OAAO,CAAC,gBAAD,CAAvC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAV,EAA4C;AAC3DD,EAAAA,cAAc,CAAC;AACb,eAAW,CAACE,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAClC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,OAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AACL,SAAE,GAAET,SAAS,CAAC,SAAD,EAAYM,QAAZ,CAAsB,oCAAnC,GAAyE;AACvE,kCAAwB,GAD+C;AAEvE,0BAAiB,QAAOE,KAAM,+BAFyC;AAGvE,yBAAgB,QAAOA,KAAM;AAH0C;AADpE,OAAP;AAOD,KAfY;AAgBb,eAAW,CAACF,QAAD,EAAW;AAAEC,MAAAA;AAAF,KAAX,KAAyB;AAClC,UAAIC,KAAK,GAAGT,QAAQ,CAACO,QAAD,EAAWC,KAAK,CAAC,OAAD,CAAhB,CAApB;;AAEA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,eAAO,EAAP;AACD;;AAED,aAAO;AACL,SAAE,GAAET,SAAS,CAAC,SAAD,EAAYM,QAAZ,CAAsB,oCAAnC,GAAyE;AACvE,kCAAwB,GAD+C;AAEvE,wBAAe,QAAOE,KAAM,yCAF2C;AAGvE,2BAAkB,QAAOA,KAAM;AAHwC;AADpE,OAAP;AAOD;AA9BY,GAAD,CAAd;AAiCAH,EAAAA,YAAY,CAAC;AACX,0DAAsD;AACpD,8BAAwB;AAD4B,KAD3C;AAIX,0DAAsD;AACpD,8BAAwB;AAD4B;AAJ3C,GAAD,CAAZ;AAQD,CA1CD","sourcesContent":["const { asLength, nameClass } = require('../pluginUtils')\n\nmodule.exports = function ({ matchUtilities, addUtilities }) {\n  matchUtilities({\n    'space-x': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['space'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return {\n        [`${nameClass('space-x', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-space-x-reverse': '0',\n          'margin-right': `calc(${value} * var(--tw-space-x-reverse))`,\n          'margin-left': `calc(${value} * calc(1 - var(--tw-space-x-reverse)))`,\n        },\n      }\n    },\n    'space-y': (modifier, { theme }) => {\n      let value = asLength(modifier, theme['space'])\n\n      if (value === undefined) {\n        return []\n      }\n\n      return {\n        [`${nameClass('space-y', modifier)} > :not([hidden]) ~ :not([hidden])`]: {\n          '--tw-space-y-reverse': '0',\n          'margin-top': `calc(${value} * calc(1 - var(--tw-space-y-reverse)))`,\n          'margin-bottom': `calc(${value} * var(--tw-space-y-reverse))`,\n        },\n      }\n    },\n  })\n\n  addUtilities({\n    '.space-y-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-space-y-reverse': '1',\n    },\n    '.space-x-reverse > :not([hidden]) ~ :not([hidden])': {\n      '--tw-space-x-reverse': '1',\n    },\n  })\n}\n"]},"metadata":{},"sourceType":"script"}